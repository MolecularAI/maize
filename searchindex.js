Search.setIndex({"docnames": ["docs/_autosummary/maize.core", "docs/_autosummary/maize.core.channels", "docs/_autosummary/maize.core.channels.Channel", "docs/_autosummary/maize.core.channels.ChannelEmpty", "docs/_autosummary/maize.core.channels.ChannelException", "docs/_autosummary/maize.core.channels.ChannelFull", "docs/_autosummary/maize.core.channels.DataChannel", "docs/_autosummary/maize.core.channels.FileChannel", "docs/_autosummary/maize.core.component", "docs/_autosummary/maize.core.component.Component", "docs/_autosummary/maize.core.graph", "docs/_autosummary/maize.core.graph.Graph", "docs/_autosummary/maize.core.graph.GraphBuildException", "docs/_autosummary/maize.core.interface", "docs/_autosummary/maize.core.interface.FileParameter", "docs/_autosummary/maize.core.interface.Input", "docs/_autosummary/maize.core.interface.Interface", "docs/_autosummary/maize.core.interface.MultiInput", "docs/_autosummary/maize.core.interface.MultiOutput", "docs/_autosummary/maize.core.interface.MultiParameter", "docs/_autosummary/maize.core.interface.MultiPort", "docs/_autosummary/maize.core.interface.Output", "docs/_autosummary/maize.core.interface.Parameter", "docs/_autosummary/maize.core.interface.ParameterException", "docs/_autosummary/maize.core.interface.Port", "docs/_autosummary/maize.core.interface.PortException", "docs/_autosummary/maize.core.interface.PortInterrupt", "docs/_autosummary/maize.core.interface.Suffix", "docs/_autosummary/maize.core.node", "docs/_autosummary/maize.core.node.LoopedNode", "docs/_autosummary/maize.core.node.Node", "docs/_autosummary/maize.core.node.NodeBuildException", "docs/_autosummary/maize.core.runtime", "docs/_autosummary/maize.core.runtime.CustomFormat", "docs/_autosummary/maize.core.runtime.Logger", "docs/_autosummary/maize.core.runtime.NodeException", "docs/_autosummary/maize.core.runtime.RunPool", "docs/_autosummary/maize.core.runtime.Runnable", "docs/_autosummary/maize.core.runtime.Status", "docs/_autosummary/maize.core.runtime.StatusHandler", "docs/_autosummary/maize.core.runtime.StatusUpdate", "docs/_autosummary/maize.core.runtime.format_summaries", "docs/_autosummary/maize.core.runtime.format_update", "docs/_autosummary/maize.core.runtime.init_signal", "docs/_autosummary/maize.core.runtime.setup_build_logging", "docs/_autosummary/maize.core.runtime.setup_node_logging", "docs/_autosummary/maize.core.workflow", "docs/_autosummary/maize.core.workflow.CheckpointException", "docs/_autosummary/maize.core.workflow.ParsingException", "docs/_autosummary/maize.core.workflow.Workflow", "docs/_autosummary/maize.core.workflow.expose", "docs/_autosummary/maize.utilities", "docs/_autosummary/maize.utilities.execution", "docs/_autosummary/maize.utilities.execution.CommandRunner", "docs/_autosummary/maize.utilities.execution.CommandRunnerPSIJ", "docs/_autosummary/maize.utilities.execution.JobResourceConfig", "docs/_autosummary/maize.utilities.execution.ProcessError", "docs/_autosummary/maize.utilities.execution.ResourceManagerConfig", "docs/_autosummary/maize.utilities.execution.check_executable", "docs/_autosummary/maize.utilities.execution.check_returncode", "docs/_autosummary/maize.utilities.execution.run_single_process", "docs/_autosummary/maize.utilities.io", "docs/_autosummary/maize.utilities.io.Config", "docs/_autosummary/maize.utilities.io.NodeConfig", "docs/_autosummary/maize.utilities.io.NodeConfigDict", "docs/_autosummary/maize.utilities.io.common_parent", "docs/_autosummary/maize.utilities.io.create_default_parser", "docs/_autosummary/maize.utilities.io.expand_shell_vars", "docs/_autosummary/maize.utilities.io.get_plugins", "docs/_autosummary/maize.utilities.io.load_file", "docs/_autosummary/maize.utilities.io.parse_groups", "docs/_autosummary/maize.utilities.io.read_input", "docs/_autosummary/maize.utilities.io.remove_dir_contents", "docs/_autosummary/maize.utilities.io.sendtree", "docs/_autosummary/maize.utilities.io.setup_workflow", "docs/_autosummary/maize.utilities.io.with_fields", "docs/_autosummary/maize.utilities.io.with_keys", "docs/_autosummary/maize.utilities.io.write_input", "docs/_autosummary/maize.utilities.macros", "docs/_autosummary/maize.utilities.macros.function_to_node", "docs/_autosummary/maize.utilities.macros.lambda_node", "docs/_autosummary/maize.utilities.macros.node_to_function", "docs/_autosummary/maize.utilities.macros.parallel", "docs/_autosummary/maize.utilities.resources", "docs/_autosummary/maize.utilities.resources.ChunkedSemaphore", "docs/_autosummary/maize.utilities.resources.Resources", "docs/_autosummary/maize.utilities.resources.cpu_count", "docs/_autosummary/maize.utilities.resources.gpu_count", "docs/_autosummary/maize.utilities.testing", "docs/_autosummary/maize.utilities.testing.MockChannel", "docs/_autosummary/maize.utilities.testing.TestRig", "docs/_autosummary/maize.utilities.utilities", "docs/_autosummary/maize.utilities.utilities.StrEnum", "docs/_autosummary/maize.utilities.utilities.Timer", "docs/_autosummary/maize.utilities.utilities.change_environment", "docs/_autosummary/maize.utilities.utilities.chunks", "docs/_autosummary/maize.utilities.utilities.extract_attribute_docs", "docs/_autosummary/maize.utilities.utilities.extract_parent_type", "docs/_autosummary/maize.utilities.utilities.extract_type", "docs/_autosummary/maize.utilities.utilities.find_probable_files_from_command", "docs/_autosummary/maize.utilities.utilities.graph_cycles", "docs/_autosummary/maize.utilities.utilities.graph_to_nx", "docs/_autosummary/maize.utilities.utilities.has_file", "docs/_autosummary/maize.utilities.utilities.has_module_system", "docs/_autosummary/maize.utilities.utilities.is_path_type", "docs/_autosummary/maize.utilities.utilities.load_modules", "docs/_autosummary/maize.utilities.utilities.make_list", "docs/_autosummary/maize.utilities.utilities.match_context", "docs/_autosummary/maize.utilities.utilities.matching_types", "docs/_autosummary/maize.utilities.utilities.nested_dict_to_tuple", "docs/_autosummary/maize.utilities.utilities.set_environment", "docs/_autosummary/maize.utilities.utilities.tuple_to_nested_dict", "docs/_autosummary/maize.utilities.utilities.typecheck", "docs/_autosummary/maize.utilities.utilities.unique_id", "docs/_autosummary/maize.utilities.validation", "docs/_autosummary/maize.utilities.validation.FailValidator", "docs/_autosummary/maize.utilities.validation.FileValidator", "docs/_autosummary/maize.utilities.validation.OutputValidator", "docs/_autosummary/maize.utilities.validation.SuccessValidator", "docs/_autosummary/maize.utilities.validation.Validator", "docs/_autosummary/maize.utilities.visual", "docs/_autosummary/maize.utilities.visual.nested_graphviz", "docs/cookbook", "docs/design", "docs/development", "docs/examples", "docs/glossary", "docs/quickstart", "docs/reference", "docs/roadmap", "docs/steps/index", "docs/steps/io", "docs/steps/plumbing", "docs/userguide", "index"], "filenames": ["docs/_autosummary/maize.core.rst", "docs/_autosummary/maize.core.channels.rst", "docs/_autosummary/maize.core.channels.Channel.rst", "docs/_autosummary/maize.core.channels.ChannelEmpty.rst", "docs/_autosummary/maize.core.channels.ChannelException.rst", "docs/_autosummary/maize.core.channels.ChannelFull.rst", "docs/_autosummary/maize.core.channels.DataChannel.rst", "docs/_autosummary/maize.core.channels.FileChannel.rst", "docs/_autosummary/maize.core.component.rst", "docs/_autosummary/maize.core.component.Component.rst", "docs/_autosummary/maize.core.graph.rst", "docs/_autosummary/maize.core.graph.Graph.rst", "docs/_autosummary/maize.core.graph.GraphBuildException.rst", "docs/_autosummary/maize.core.interface.rst", "docs/_autosummary/maize.core.interface.FileParameter.rst", "docs/_autosummary/maize.core.interface.Input.rst", "docs/_autosummary/maize.core.interface.Interface.rst", "docs/_autosummary/maize.core.interface.MultiInput.rst", "docs/_autosummary/maize.core.interface.MultiOutput.rst", "docs/_autosummary/maize.core.interface.MultiParameter.rst", "docs/_autosummary/maize.core.interface.MultiPort.rst", "docs/_autosummary/maize.core.interface.Output.rst", "docs/_autosummary/maize.core.interface.Parameter.rst", "docs/_autosummary/maize.core.interface.ParameterException.rst", "docs/_autosummary/maize.core.interface.Port.rst", "docs/_autosummary/maize.core.interface.PortException.rst", "docs/_autosummary/maize.core.interface.PortInterrupt.rst", "docs/_autosummary/maize.core.interface.Suffix.rst", "docs/_autosummary/maize.core.node.rst", "docs/_autosummary/maize.core.node.LoopedNode.rst", "docs/_autosummary/maize.core.node.Node.rst", "docs/_autosummary/maize.core.node.NodeBuildException.rst", "docs/_autosummary/maize.core.runtime.rst", "docs/_autosummary/maize.core.runtime.CustomFormat.rst", "docs/_autosummary/maize.core.runtime.Logger.rst", "docs/_autosummary/maize.core.runtime.NodeException.rst", "docs/_autosummary/maize.core.runtime.RunPool.rst", "docs/_autosummary/maize.core.runtime.Runnable.rst", "docs/_autosummary/maize.core.runtime.Status.rst", "docs/_autosummary/maize.core.runtime.StatusHandler.rst", "docs/_autosummary/maize.core.runtime.StatusUpdate.rst", "docs/_autosummary/maize.core.runtime.format_summaries.rst", "docs/_autosummary/maize.core.runtime.format_update.rst", "docs/_autosummary/maize.core.runtime.init_signal.rst", "docs/_autosummary/maize.core.runtime.setup_build_logging.rst", "docs/_autosummary/maize.core.runtime.setup_node_logging.rst", "docs/_autosummary/maize.core.workflow.rst", "docs/_autosummary/maize.core.workflow.CheckpointException.rst", "docs/_autosummary/maize.core.workflow.ParsingException.rst", "docs/_autosummary/maize.core.workflow.Workflow.rst", "docs/_autosummary/maize.core.workflow.expose.rst", "docs/_autosummary/maize.utilities.rst", "docs/_autosummary/maize.utilities.execution.rst", "docs/_autosummary/maize.utilities.execution.CommandRunner.rst", "docs/_autosummary/maize.utilities.execution.CommandRunnerPSIJ.rst", "docs/_autosummary/maize.utilities.execution.JobResourceConfig.rst", "docs/_autosummary/maize.utilities.execution.ProcessError.rst", "docs/_autosummary/maize.utilities.execution.ResourceManagerConfig.rst", "docs/_autosummary/maize.utilities.execution.check_executable.rst", "docs/_autosummary/maize.utilities.execution.check_returncode.rst", "docs/_autosummary/maize.utilities.execution.run_single_process.rst", "docs/_autosummary/maize.utilities.io.rst", "docs/_autosummary/maize.utilities.io.Config.rst", "docs/_autosummary/maize.utilities.io.NodeConfig.rst", "docs/_autosummary/maize.utilities.io.NodeConfigDict.rst", "docs/_autosummary/maize.utilities.io.common_parent.rst", "docs/_autosummary/maize.utilities.io.create_default_parser.rst", "docs/_autosummary/maize.utilities.io.expand_shell_vars.rst", "docs/_autosummary/maize.utilities.io.get_plugins.rst", "docs/_autosummary/maize.utilities.io.load_file.rst", "docs/_autosummary/maize.utilities.io.parse_groups.rst", "docs/_autosummary/maize.utilities.io.read_input.rst", "docs/_autosummary/maize.utilities.io.remove_dir_contents.rst", "docs/_autosummary/maize.utilities.io.sendtree.rst", "docs/_autosummary/maize.utilities.io.setup_workflow.rst", "docs/_autosummary/maize.utilities.io.with_fields.rst", "docs/_autosummary/maize.utilities.io.with_keys.rst", "docs/_autosummary/maize.utilities.io.write_input.rst", "docs/_autosummary/maize.utilities.macros.rst", "docs/_autosummary/maize.utilities.macros.function_to_node.rst", "docs/_autosummary/maize.utilities.macros.lambda_node.rst", "docs/_autosummary/maize.utilities.macros.node_to_function.rst", "docs/_autosummary/maize.utilities.macros.parallel.rst", "docs/_autosummary/maize.utilities.resources.rst", "docs/_autosummary/maize.utilities.resources.ChunkedSemaphore.rst", "docs/_autosummary/maize.utilities.resources.Resources.rst", "docs/_autosummary/maize.utilities.resources.cpu_count.rst", "docs/_autosummary/maize.utilities.resources.gpu_count.rst", "docs/_autosummary/maize.utilities.testing.rst", "docs/_autosummary/maize.utilities.testing.MockChannel.rst", "docs/_autosummary/maize.utilities.testing.TestRig.rst", "docs/_autosummary/maize.utilities.utilities.rst", "docs/_autosummary/maize.utilities.utilities.StrEnum.rst", "docs/_autosummary/maize.utilities.utilities.Timer.rst", "docs/_autosummary/maize.utilities.utilities.change_environment.rst", "docs/_autosummary/maize.utilities.utilities.chunks.rst", "docs/_autosummary/maize.utilities.utilities.extract_attribute_docs.rst", "docs/_autosummary/maize.utilities.utilities.extract_parent_type.rst", "docs/_autosummary/maize.utilities.utilities.extract_type.rst", "docs/_autosummary/maize.utilities.utilities.find_probable_files_from_command.rst", "docs/_autosummary/maize.utilities.utilities.graph_cycles.rst", "docs/_autosummary/maize.utilities.utilities.graph_to_nx.rst", "docs/_autosummary/maize.utilities.utilities.has_file.rst", "docs/_autosummary/maize.utilities.utilities.has_module_system.rst", "docs/_autosummary/maize.utilities.utilities.is_path_type.rst", "docs/_autosummary/maize.utilities.utilities.load_modules.rst", "docs/_autosummary/maize.utilities.utilities.make_list.rst", "docs/_autosummary/maize.utilities.utilities.match_context.rst", "docs/_autosummary/maize.utilities.utilities.matching_types.rst", "docs/_autosummary/maize.utilities.utilities.nested_dict_to_tuple.rst", "docs/_autosummary/maize.utilities.utilities.set_environment.rst", "docs/_autosummary/maize.utilities.utilities.tuple_to_nested_dict.rst", "docs/_autosummary/maize.utilities.utilities.typecheck.rst", "docs/_autosummary/maize.utilities.utilities.unique_id.rst", "docs/_autosummary/maize.utilities.validation.rst", "docs/_autosummary/maize.utilities.validation.FailValidator.rst", "docs/_autosummary/maize.utilities.validation.FileValidator.rst", "docs/_autosummary/maize.utilities.validation.OutputValidator.rst", "docs/_autosummary/maize.utilities.validation.SuccessValidator.rst", "docs/_autosummary/maize.utilities.validation.Validator.rst", "docs/_autosummary/maize.utilities.visual.rst", "docs/_autosummary/maize.utilities.visual.nested_graphviz.rst", "docs/cookbook.rst", "docs/design.rst", "docs/development.rst", "docs/examples.rst", "docs/glossary.rst", "docs/quickstart.rst", "docs/reference.rst", "docs/roadmap.rst", "docs/steps/index.rst", "docs/steps/io.rst", "docs/steps/plumbing.rst", "docs/userguide.rst", "index.rst"], "titles": ["core", "channels", "Channel", "ChannelEmpty", "ChannelException", "ChannelFull", "DataChannel", "FileChannel", "component", "Component", "graph", "Graph", "GraphBuildException", "interface", "FileParameter", "Input", "Interface", "MultiInput", "MultiOutput", "MultiParameter", "MultiPort", "Output", "Parameter", "ParameterException", "Port", "PortException", "PortInterrupt", "Suffix", "node", "LoopedNode", "Node", "NodeBuildException", "runtime", "CustomFormat", "Logger", "NodeException", "RunPool", "Runnable", "Status", "StatusHandler", "StatusUpdate", "format_summaries", "format_update", "init_signal", "setup_build_logging", "setup_node_logging", "workflow", "CheckpointException", "ParsingException", "Workflow", "expose", "utilities", "execution", "CommandRunner", "CommandRunnerPSIJ", "JobResourceConfig", "ProcessError", "ResourceManagerConfig", "check_executable", "check_returncode", "run_single_process", "io", "Config", "NodeConfig", "NodeConfigDict", "common_parent", "create_default_parser", "expand_shell_vars", "get_plugins", "load_file", "parse_groups", "read_input", "remove_dir_contents", "sendtree", "setup_workflow", "with_fields", "with_keys", "write_input", "macros", "function_to_node", "lambda_node", "node_to_function", "parallel", "resources", "ChunkedSemaphore", "Resources", "cpu_count", "gpu_count", "testing", "MockChannel", "TestRig", "utilities", "StrEnum", "Timer", "change_environment", "chunks", "extract_attribute_docs", "extract_parent_type", "extract_type", "find_probable_files_from_command", "graph_cycles", "graph_to_nx", "has_file", "has_module_system", "is_path_type", "load_modules", "make_list", "match_context", "matching_types", "nested_dict_to_tuple", "set_environment", "tuple_to_nested_dict", "typecheck", "unique_id", "validation", "FailValidator", "FileValidator", "OutputValidator", "SuccessValidator", "Validator", "visual", "nested_graphviz", "Cookbook", "Design", "Development", "Examples", "Glossary", "Quickstart", "Reference", "Roadmap", "Steps", "Input / Output", "Plumbing", "User guide", "maize"], "terms": {"maiz": [0, 2, 3, 4, 5, 6, 7, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133], "function": [0, 29, 30, 32, 33, 44, 45, 46, 49, 50, 52, 60, 61, 78, 79, 80, 81, 83, 91, 93, 120, 122, 123, 124, 133], "modul": [0, 13, 29, 30, 51, 62, 63, 68, 69, 103, 105, 122, 123, 127, 132, 133, 134], "commun": [1, 2, 6, 7, 11, 13, 28, 49, 123, 126, 133, 134], "us": [1, 6, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 29, 30, 33, 35, 49, 54, 60, 62, 63, 69, 82, 89, 92, 103, 105, 112, 122, 123, 124, 126, 127, 129, 133, 134], "pass": [1, 7, 9, 11, 29, 30, 33, 49, 62, 82, 121, 123, 131, 132, 133], "file": [1, 6, 7, 9, 11, 13, 14, 15, 17, 18, 20, 21, 22, 24, 27, 30, 34, 44, 46, 49, 62, 63, 65, 69, 71, 73, 99, 102, 116, 122, 123, 126, 127, 131, 134], "data": [1, 6, 7, 11, 15, 17, 20, 21, 22, 24, 33, 49, 63, 75, 76, 77, 82, 95, 111, 122, 123, 125, 126, 129, 131, 132, 133, 134], "between": [1, 84, 123, 126, 132, 133], "compon": [1, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 30, 34, 37, 38, 39, 44, 45, 49, 82, 85, 96, 123, 124, 126, 133], "The": [1, 2, 6, 7, 8, 9, 11, 15, 16, 17, 18, 19, 20, 22, 29, 30, 33, 41, 46, 49, 54, 62, 63, 66, 69, 74, 81, 82, 85, 89, 97, 98, 104, 108, 122, 123, 124, 126, 131, 133], "two": [1, 15, 17, 18, 20, 21, 24, 29, 30, 49, 108, 122, 123, 133], "main": [1, 9, 11, 29, 30, 34, 37, 44, 49, 54, 122, 123, 131, 133], "type": [1, 2, 6, 7, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 29, 30, 36, 40, 41, 42, 44, 45, 49, 50, 54, 55, 58, 62, 63, 65, 66, 68, 69, 70, 73, 79, 80, 81, 82, 89, 90, 96, 97, 98, 99, 101, 104, 107, 108, 112, 113, 121, 123, 124, 131, 132, 133], "interest": [1, 41, 133], "user": [1, 9, 11, 24, 28, 29, 30, 33, 49, 90, 123, 124, 127, 129, 132, 134], "ar": [1, 8, 9, 11, 28, 29, 30, 33, 49, 62, 64, 108, 116, 118, 122, 123, 124, 132, 133], "datachannel": [1, 7, 126], "filechannel": [1, 6, 126, 133], "former": [1, 123, 133], "i": [1, 2, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 30, 33, 46, 49, 54, 64, 80, 89, 93, 104, 112, 116, 122, 123, 124, 126, 128, 132, 133, 134], "wrapper": [1, 80], "around": [1, 133], "multiprocess": 1, "queue": [1, 6, 11, 34, 38, 45, 49, 57, 62, 131, 133], "while": [1, 15, 86, 123, 133], "latter": [1, 123, 124, 127, 134], "specif": [1, 7, 29, 30, 33, 44, 45, 49, 62, 63, 90, 122, 123, 124, 127, 130, 133], "directori": [1, 7, 9, 11, 29, 30, 49, 54, 62, 65, 72, 73, 99, 102, 133], "share": 1, "space": [1, 2, 6, 7, 18, 89], "transmit": 1, "all": [1, 8, 9, 11, 13, 15, 19, 29, 30, 33, 34, 36, 40, 41, 49, 62, 64, 72, 82, 116, 118, 122, 123, 124, 126, 132, 133], "unidirect": [1, 126, 134], "connect": [1, 10, 11, 15, 17, 18, 20, 21, 24, 49, 122, 123, 125, 126, 131, 134], "node": [1, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 29, 31, 32, 34, 35, 40, 42, 45, 46, 49, 54, 55, 62, 63, 78, 79, 80, 81, 82, 89, 90, 96, 122, 124, 125, 126, 131, 132, 134], "cannot": [1, 11, 49], "send": [1, 2, 6, 7, 9, 11, 18, 20, 21, 29, 30, 34, 49, 89, 122, 123, 125, 131, 132, 133, 134], "receiv": [1, 2, 6, 7, 9, 11, 15, 17, 20, 24, 29, 30, 34, 40, 49, 89, 122, 123, 125, 131, 132, 133, 134], "same": [1, 8, 11, 33, 49, 82, 122, 123, 132, 133], "either": [1, 7, 15, 33, 64, 124, 126, 133], "can": [1, 7, 9, 10, 11, 14, 15, 17, 18, 20, 21, 24, 29, 30, 33, 37, 49, 58, 62, 63, 74, 89, 90, 103, 112, 122, 123, 124, 126, 127, 132, 133, 134], "assign": [1, 131, 133], "port": [1, 2, 3, 5, 7, 9, 11, 13, 15, 16, 17, 18, 20, 21, 28, 29, 30, 49, 79, 122, 123, 126, 131, 132, 133, 134], "interfac": [1, 8, 9, 11, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 49, 82, 89, 90, 122, 125, 126, 133, 134], "set_channel": [1, 15, 17, 18, 20, 21, 24], "method": [1, 2, 6, 7, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 39, 40, 49, 54, 55, 57, 62, 63, 64, 82, 84, 85, 89, 90, 93, 115, 116, 117, 118, 119, 123, 133], "custom": [1, 9, 11, 28, 29, 30, 33, 44, 45, 49, 80, 124, 129, 132], "possibl": [1, 11, 13, 27, 49, 54, 99, 123, 133], "should": [1, 8, 9, 11, 15, 29, 30, 33, 35, 49, 62, 99, 117, 119, 122, 123, 124, 127, 133, 134], "subclass": [1, 11, 15, 17, 18, 19, 20, 21, 24, 27, 28, 30, 46], "from": [1, 2, 6, 7, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 29, 30, 33, 34, 41, 46, 49, 54, 62, 63, 64, 79, 89, 96, 97, 98, 99, 121, 122, 123, 124, 125, 126, 127, 129, 131, 132, 133, 134], "abstract": [1, 2, 29, 30, 37], "base": [1, 2, 6, 7, 8, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 29, 30, 33, 34, 36, 37, 38, 39, 40, 49, 54, 55, 57, 62, 63, 64, 68, 75, 76, 84, 85, 89, 90, 92, 93, 94, 115, 116, 117, 118, 119, 123, 124, 126, 133, 134], "class": [1, 2, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 40, 46, 49, 52, 54, 55, 57, 61, 62, 63, 64, 79, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 96, 97, 98, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 131, 132, 133, 134], "thi": [1, 7, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 29, 30, 33, 49, 54, 62, 64, 122, 123, 124, 127, 128, 131, 133, 134], "also": [1, 10, 11, 13, 15, 29, 30, 49, 54, 62, 89, 112, 122, 123, 124, 126, 127, 133], "requir": [1, 9, 11, 15, 17, 18, 20, 24, 29, 30, 33, 49, 62, 122, 123, 124, 127, 132, 133], "modifi": 1, "graph": [1, 8, 9, 12, 13, 14, 19, 22, 28, 29, 30, 32, 34, 46, 48, 49, 82, 85, 100, 101, 120, 121, 124, 125, 126, 131, 132, 133, 134], "new": [1, 11, 17, 18, 20, 29, 30, 64, 79, 123, 133], "except": [1, 3, 4, 5, 10, 11, 12, 13, 14, 23, 25, 26, 28, 29, 30, 31, 32, 33, 35, 38, 46, 47, 48, 49, 52, 54, 56, 59, 133], "core": [2, 3, 4, 5, 6, 7, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 62, 90, 122, 123, 125, 133, 134], "sourc": [2, 3, 4, 5, 6, 7, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 121, 123, 131, 132], "abc": [2, 37], "gener": [2, 9, 11, 16, 29, 30, 49, 63, 95, 113, 116, 122, 123, 131, 132], "t": [2, 6, 7, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 29, 30, 49, 73, 75, 76, 89, 93, 95, 97, 98, 106, 109, 111, 124, 131, 132, 133], "repres": [2, 7, 8, 11, 35, 37, 49, 84, 123, 126, 133], "plug": 2, "__init__": [2, 6, 7, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 29, 30, 33, 34, 36, 37, 38, 39, 40, 49, 54, 55, 57, 62, 63, 64, 84, 85, 89, 90, 92, 93, 115, 116, 117, 118, 119], "attribut": [2, 6, 7, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 29, 30, 33, 34, 36, 37, 38, 39, 40, 43, 49, 55, 57, 62, 63, 64, 75, 89, 90, 93, 96, 123, 124, 133], "properti": [2, 6, 7, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 29, 30, 36, 49, 89, 93, 123], "activ": [2, 6, 7, 9, 11, 15, 17, 18, 20, 21, 24, 29, 30, 49, 89, 132, 133], "bool": [2, 6, 7, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 29, 30, 33, 49, 54, 55, 58, 59, 89, 93, 102, 103, 104, 108, 112, 116, 121, 131, 132], "return": [2, 6, 7, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 29, 30, 33, 36, 41, 42, 44, 45, 49, 50, 54, 58, 63, 64, 65, 66, 68, 69, 70, 71, 73, 79, 80, 81, 82, 89, 93, 96, 97, 98, 99, 100, 101, 102, 104, 107, 108, 112, 113, 117, 119, 121, 122, 125, 131, 132, 133], "whether": [2, 6, 7, 9, 11, 14, 15, 17, 18, 19, 20, 21, 22, 24, 29, 30, 49, 54, 59, 73, 89, 93, 100, 102, 103, 116, 133], "close": [2, 6, 7, 15, 17, 18, 20, 21, 24, 38, 89], "none": [2, 6, 7, 9, 11, 14, 15, 17, 18, 19, 20, 21, 22, 24, 26, 27, 29, 30, 33, 34, 36, 37, 40, 43, 44, 45, 49, 50, 54, 55, 57, 59, 60, 62, 63, 64, 69, 72, 74, 77, 82, 84, 85, 89, 90, 93, 94, 95, 97, 98, 105, 110, 115, 116, 117, 118, 121, 122, 125, 131, 132, 133, 134], "flush": [2, 6, 7, 89], "timeout": [2, 6, 7, 15, 17, 18, 20, 21, 24, 29, 30, 54, 89, 123, 133], "float": [2, 6, 7, 15, 17, 18, 20, 21, 24, 29, 30, 36, 54, 89, 122, 131, 132, 133], "0": [2, 6, 7, 15, 17, 18, 20, 21, 24, 40, 62, 89, 121, 133, 134], "1": [2, 9, 11, 17, 18, 27, 29, 30, 36, 49, 54, 62, 89, 125, 131, 132, 133, 134], "list": [2, 6, 7, 9, 11, 15, 17, 19, 29, 30, 41, 49, 54, 58, 62, 63, 65, 89, 95, 99, 100, 106, 115, 116, 117, 118, 122, 131, 132, 133], "content": [2, 6, 7, 89, 133], "paramet": [2, 6, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 27, 28, 29, 30, 33, 34, 36, 41, 42, 43, 44, 45, 49, 50, 54, 58, 59, 60, 62, 63, 65, 68, 69, 70, 73, 74, 79, 80, 81, 82, 84, 85, 89, 90, 94, 96, 97, 98, 99, 101, 104, 105, 107, 108, 110, 112, 113, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 129, 131, 132, 134], "item": [2, 6, 7, 9, 11, 15, 17, 18, 20, 21, 24, 29, 30, 36, 40, 49, 64, 72, 89, 106, 122, 123, 131, 132, 133], "retriev": [2, 6, 7, 9, 11, 29, 30, 49, 89, 133], "unseri": [2, 6, 89], "kill": [2, 6, 7, 89], "call": [2, 6, 7, 15, 17, 18, 19, 20, 21, 24, 29, 30, 33, 54, 56, 60, 89, 117, 119, 122, 123, 133], "network": [2, 6, 7, 9, 11, 30, 89], "shutdown": [2, 6, 7, 9, 11, 15, 17, 18, 20, 24, 29, 30, 34, 37, 49, 89, 123, 132, 133], "ensur": [2, 6, 7, 13, 89, 123, 124, 133], "orphan": [2, 6, 7, 89], "process": [2, 6, 7, 9, 11, 15, 17, 18, 19, 20, 24, 26, 29, 30, 34, 36, 37, 44, 45, 49, 54, 55, 59, 60, 89, 90, 114, 122, 123, 131, 133, 134], "readi": [2, 6, 7, 15, 38, 49, 89, 123, 133], "an": [2, 6, 7, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 29, 30, 33, 37, 38, 43, 49, 54, 59, 62, 64, 71, 74, 79, 80, 89, 98, 99, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 131, 133, 134], "second": [2, 6, 7, 29, 30, 33, 54, 89, 93, 132, 133], "wait": [2, 6, 7, 9, 11, 15, 17, 18, 20, 21, 24, 29, 30, 36, 38, 40, 42, 49, 84, 89, 122, 133], "empti": [2, 3, 6, 7, 15, 64, 89, 99, 116, 123], "Will": [2, 6, 7, 11, 49, 89], "attempt": [2, 6, 7, 9, 11, 15, 29, 30, 89, 123, 133], "ani": [2, 6, 7, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 29, 30, 33, 36, 39, 49, 54, 55, 60, 62, 63, 70, 71, 73, 75, 76, 77, 79, 80, 81, 82, 89, 90, 97, 98, 104, 108, 111, 112, 115, 123, 124, 126, 131, 132, 133, 134], "potenti": [2, 6, 7, 11, 15, 18, 21, 49, 89, 122, 133], "block": [2, 6, 7, 15, 17, 18, 20, 24, 38, 54, 89], "full": [2, 5, 6, 7, 9, 11, 21, 29, 30, 38, 40, 49, 67, 89, 123, 124, 133], "rais": [2, 3, 4, 5, 6, 7, 11, 12, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 47, 48, 49, 54, 59, 64, 84, 89, 123, 133], "channelful": [2, 6, 7, 89], "If": [2, 6, 7, 9, 11, 14, 15, 17, 18, 19, 20, 21, 22, 24, 29, 30, 33, 49, 54, 64, 84, 89, 108, 116, 118, 123, 124, 126, 127, 131, 133, 134], "alreadi": [2, 6, 7, 11, 49, 89], "size": [2, 6, 7, 11, 15, 17, 18, 20, 21, 24, 49, 89], "int": [2, 6, 7, 9, 11, 15, 17, 18, 20, 21, 24, 27, 29, 30, 34, 36, 40, 44, 45, 49, 54, 55, 57, 82, 84, 85, 86, 87, 89, 90, 95, 107, 113, 121, 122, 125, 131, 132, 133], "current": [2, 6, 7, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 29, 30, 33, 38, 49, 54, 86, 87, 89, 93, 99, 121, 133], "approxim": [2, 6, 7, 15, 17, 18, 20, 21, 24, 89], "buffer": [2, 6, 7, 89], "channel": [3, 4, 5, 6, 7, 10, 11, 13, 15, 17, 18, 20, 21, 24, 25, 29, 30, 38, 49, 89, 90, 122, 123, 126, 131, 132, 133, 134], "typic": [3, 5, 7, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 30, 49, 123, 133], "caught": [3, 5], "miscallan": 4, "issu": [4, 12, 23, 25, 36, 47, 90, 122, 124, 127, 133], "A": [6, 7, 11, 42, 49, 50, 62, 79, 81, 82, 113, 122, 123, 125, 126, 131, 133, 134], "form": [6, 7, 9, 64, 85, 97, 98, 122, 123, 133], "python": [6, 9, 11, 29, 30, 49, 60, 62, 63, 69, 79, 92, 94, 123, 124, 127, 132, 133], "object": [6, 7, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 36, 37, 39, 40, 43, 49, 54, 55, 57, 62, 63, 64, 66, 74, 75, 84, 85, 90, 93, 97, 98, 99, 101, 107, 117, 119, 121, 122, 123, 133], "sent": [6, 9, 11, 29, 30, 40, 49, 89, 122, 131, 133], "need": [6, 11, 15, 17, 18, 20, 21, 24, 49, 122, 123, 124, 127, 133], "serializ": [6, 7, 11, 49], "dill": [6, 127], "5": [6, 7, 15, 17, 18, 20, 21, 24, 84, 85, 133], "preload": [6, 7, 15, 17], "byte": [6, 29, 30, 54, 59], "pre": [6, 49, 130, 133], "load": [6, 7, 29, 30, 49, 62, 68, 69, 89, 90, 105, 132, 133], "serial": [6, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 29, 30, 49, 63, 133], "restart": [6, 129], "mode": [7, 11, 15, 17, 18, 20, 21, 24, 49, 73, 124, 127, 133], "liter": [7, 9, 11, 15, 17, 18, 20, 21, 24, 29, 30, 49, 57, 63, 73, 121], "copi": [7, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 49, 64, 73, 132, 133], "link": [7, 11, 15, 17, 18, 20, 21, 24, 49, 73, 133], "move": [7, 11, 15, 17, 18, 20, 21, 24, 49, 73, 133], "path": [7, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 29, 30, 34, 44, 49, 54, 60, 62, 63, 65, 67, 69, 71, 72, 73, 77, 94, 99, 102, 104, 116, 122, 129, 131, 132, 133], "dict": [7, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 29, 30, 42, 49, 55, 62, 63, 64, 68, 70, 71, 73, 75, 76, 77, 81, 90, 96, 109, 110, 111, 125, 133, 134], "must": [7, 122, 131, 133], "alon": 7, "dictionari": [7, 9, 11, 19, 29, 30, 33, 42, 49, 63, 64, 68, 71, 75, 76, 77, 81, 90, 96, 109, 110, 111, 129, 133], "when": [7, 10, 11, 13, 15, 17, 18, 19, 20, 21, 24, 27, 29, 30, 33, 36, 49, 123, 124, 133], "first": [7, 15, 64, 80, 122, 124, 132, 133], "transfer": [7, 122], "depend": [7, 9, 11, 29, 30, 49, 124, 127, 132, 134], "escrow": 7, "temporari": [7, 9, 11, 30, 62, 133], "upon": [7, 36, 99, 123, 132], "input": [7, 9, 11, 13, 14, 17, 24, 29, 30, 33, 38, 49, 54, 61, 71, 79, 81, 82, 90, 122, 123, 125, 126, 130, 132, 133, 134], "default": [7, 9, 11, 14, 15, 17, 18, 19, 20, 21, 22, 24, 29, 30, 33, 49, 54, 62, 63, 64, 66, 82, 123, 125, 132, 133, 134], "arbitrari": [7, 11, 21, 28, 49, 126, 133, 134], "destin": [7, 73, 131], "consist": [7, 11, 49, 123, 133], "signatur": [7, 33], "_filepathtyp": 7, "without": [7, 9, 11, 15, 17, 18, 20, 21, 24, 27, 29, 30, 49, 90, 122, 133], "explicitli": [7, 14, 15, 19, 22, 133], "setup": [7, 90, 133], "provid": [8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 29, 30, 33, 35, 49, 64, 65, 75, 76, 107, 131, 133], "act": [8, 10, 133], "thereof": 8, "both": [8, 9, 11, 29, 30, 49, 123, 124, 127, 133], "hierarch": 8, "parent": [8, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 29, 30, 40, 49, 65, 85, 90, 97, 123, 131, 132], "": [8, 9, 11, 15, 29, 30, 33, 49, 62, 64, 122, 123, 125, 126, 132, 133, 134], "root": [8, 9, 11, 29, 30, 46, 49, 123, 126], "It": [8, 10, 11, 29, 30, 49, 54, 122, 123, 126, 133, 134], "directli": [8, 9, 10, 19, 29, 30, 35, 54, 63, 123, 133], "workflow": [8, 9, 10, 11, 13, 14, 15, 22, 28, 29, 30, 47, 48, 50, 62, 74, 78, 82, 90, 101, 120, 121, 125, 126, 131, 134], "intern": [8, 11, 15, 30, 49, 121, 131, 133], "tree": [8, 49, 123, 126, 133], "own": [8, 30, 97, 122, 123, 127, 133], "other": [8, 9, 11, 13, 28, 29, 30, 38, 40, 49, 123, 132, 133, 134], "leaf": [8, 126], "term": [8, 126, 133], "atom": [8, 28, 30, 84, 126], "step": [8, 33, 62, 122, 124, 125, 129, 131, 132, 133], "branch": [8, 82, 123, 124], "sub": 8, "thei": [8, 28, 122, 123, 126, 133], "contain": [8, 10, 11, 15, 17, 19, 22, 41, 42, 49, 67, 72, 82, 100, 102, 123, 125, 126, 133], "multipl": [8, 10, 11, 13, 14, 17, 18, 19, 20, 22, 29, 30, 49, 54, 73, 82, 90, 122, 123, 126, 131, 132, 133], "expos": [8, 10, 13, 28, 49, 74, 122, 123, 133], "would": [8, 30, 123, 133], "subgraph": [8, 9, 10, 11, 19, 30, 49, 78, 82, 123, 125, 126], "name": [9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 29, 30, 34, 40, 44, 45, 49, 60, 63, 68, 69, 82, 92, 96, 97, 105, 110, 122, 123, 125, 131, 132, 133, 134], "str": [9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 29, 30, 33, 34, 40, 41, 42, 44, 45, 49, 54, 55, 57, 58, 60, 62, 63, 68, 69, 70, 71, 77, 81, 82, 90, 94, 96, 97, 99, 100, 105, 110, 113, 115, 117, 118, 122, 125, 131, 132, 133, 134], "descript": [9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 29, 30, 49, 124, 131, 132, 133], "fail_ok": [9, 11, 30, 49, 131, 132, 133], "fals": [9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 29, 30, 49, 54, 55, 58, 104, 108, 112, 122, 131, 132, 133], "n_attempt": [9, 11, 30, 49, 131, 132, 133], "level": [9, 11, 19, 29, 30, 34, 44, 45, 46, 49, 121, 124, 126, 131, 132, 133], "cleanup_temp": [9, 11, 30, 49, 131, 132, 133], "true": [9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 29, 30, 33, 49, 54, 58, 59, 104, 108, 112, 116, 121, 122, 125, 131, 132, 133], "resum": [9, 11, 17, 30, 49, 131, 132], "logfil": [9, 11, 30, 49, 131, 132, 133], "max_cpu": [9, 11, 30, 49, 131, 132], "max_gpu": [9, 11, 30, 49, 131, 132], "loop": [9, 11, 15, 29, 30, 49, 82, 122, 123, 125, 131, 132], "context": [9, 11, 30, 36, 62, 85, 107], "option": [9, 11, 14, 15, 17, 18, 20, 21, 22, 24, 29, 30, 33, 49, 54, 60, 62, 69, 122, 123, 129, 131], "addit": [9, 11, 14, 22, 29, 30, 40, 49, 62, 82, 122, 123, 127, 133], "failur": [9, 11, 29, 30, 35, 49, 54, 59, 115, 133], "trigger": [9, 11, 30], "whole": [9, 11, 30, 133], "number": [9, 11, 15, 17, 18, 20, 21, 24, 27, 29, 30, 36, 40, 49, 54, 62, 82, 86, 87, 107, 122, 132, 133, 134], "execut": [9, 10, 11, 15, 29, 30, 32, 34, 35, 36, 37, 40, 41, 46, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 62, 94, 122, 123, 124, 125, 126, 131, 132, 134], "run": [9, 11, 15, 17, 18, 21, 27, 28, 29, 30, 34, 36, 37, 38, 40, 44, 45, 49, 54, 58, 60, 63, 74, 90, 93, 114, 119, 122, 124, 125, 127, 132, 134], "log": [9, 11, 29, 30, 33, 34, 39, 44, 45, 49, 54, 59, 122, 123, 124, 131, 133], "given": [9, 11, 17, 18, 20, 29, 30, 49, 64, 68, 69, 133], "remov": [9, 11, 30, 33, 64, 72], "after": [9, 11, 30, 49, 122], "complet": [9, 11, 29, 30, 38, 40, 49, 59, 123, 133], "previou": [9, 11, 30, 133], "checkpoint": [9, 11, 17, 30, 46, 47, 49, 129], "output": [9, 11, 13, 15, 18, 24, 27, 29, 30, 38, 49, 54, 61, 79, 80, 81, 82, 90, 108, 115, 117, 118, 122, 123, 125, 126, 130, 132, 133, 134], "messag": [9, 11, 29, 30, 33, 34, 40, 45, 49, 122, 123], "stdout": [9, 11, 29, 30, 54, 117, 133], "maximum": [9, 11, 29, 30, 49, 54, 62, 84, 85, 133], "cpu": [9, 11, 29, 30, 85, 86, 133], "avail": [9, 11, 15, 17, 29, 30, 49, 54, 84, 124, 132, 133], "system": [9, 11, 29, 30, 54, 57, 62, 86, 87, 103, 110, 123, 133], "gpu": [9, 11, 30, 87, 133], "oppos": [9, 11, 30, 133], "singl": [9, 11, 15, 17, 18, 19, 29, 30, 49, 54, 79, 80, 106, 123, 126, 132, 133], "time": [9, 11, 15, 29, 30, 33, 36, 40, 44, 49, 62, 84, 93, 122, 123, 132, 133, 134], "implement": [9, 28, 30, 33, 49, 122, 123, 133], "task": [9, 22, 30, 38, 90, 123, 131, 132, 134], "group": [9, 49, 70, 123, 133], "togeth": [9, 10, 11, 15, 17, 18, 20, 21, 24, 49, 122, 124, 133], "all_paramet": [9, 11, 29, 30, 49], "multiinput": [9, 11, 13, 29, 30, 49, 122, 125, 126, 132, 133, 134], "settabl": [9, 11, 29, 30, 49], "unconnect": [9, 11, 15, 17, 21, 29, 30, 49, 123], "as_dict": [9, 11, 19, 29, 30, 49], "non": [9, 11, 14, 15, 19, 22, 29, 30, 49, 133], "recurs": [9, 11, 29, 30, 49, 121], "view": [9, 11, 29, 30, 49, 64, 126], "component_path": [9, 11, 29, 30, 49], "tupl": [9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 29, 30, 33, 40, 42, 49, 64, 106, 109, 111, 124], "datatyp": [9, 11, 13, 14, 15, 16, 22, 29, 30, 49, 104, 108, 112, 123], "full_tim": [9, 11, 29, 30, 40, 49], "timer": [9, 11, 29, 30, 49], "durat": [9, 11, 29, 30, 49], "includ": [9, 11, 13, 29, 30, 40, 49, 54, 123, 129, 133, 134], "resourc": [9, 11, 29, 30, 38, 49, 54, 55, 57, 84, 86, 87], "static": [9, 11, 15, 17, 18, 20, 21, 24, 29, 30, 49, 123, 124, 133], "get_available_nod": [9, 11, 29, 30, 49], "set": [9, 11, 14, 15, 17, 18, 19, 20, 21, 22, 24, 27, 29, 30, 33, 44, 45, 49, 50, 62, 63, 64, 74, 90, 106, 108, 110, 122, 123, 126, 127, 132], "regist": [9, 11, 29, 30, 49], "classmethod": [9, 11, 29, 30, 49, 62, 63], "get_input": [9, 11, 29, 30, 49], "get_interfac": [9, 11, 29, 30, 49], "kind": [9, 10, 11, 29, 30, 49, 124, 126], "get_node_class": [9, 11, 29, 30, 49, 133], "correspond": [9, 11, 29, 30, 49, 64, 122, 133], "add_nod": [9, 11, 29, 30, 49], "get_output": [9, 11, 29, 30, 49], "get_paramet": [9, 11, 29, 30, 49], "get_summary_lin": [9, 11, 29, 30, 49], "one": [9, 11, 19, 20, 29, 30, 33, 36, 40, 49, 54, 62, 79, 97, 98, 116, 122, 123, 132, 133], "line": [9, 11, 29, 30, 49, 124], "summari": [9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 29, 30, 41, 42, 49, 124], "logger": [9, 11, 29, 30, 44, 45, 49, 123, 125, 134], "build": [9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 44, 49, 122, 123, 125, 133, 134], "procedur": [9, 11, 29, 30, 49, 122, 123], "n_inbound": [9, 11, 29, 30, 40, 49], "n_outbound": [9, 11, 29, 30, 40, 49], "node_config": [9, 11, 29, 30, 49], "nodeconfig": [9, 11, 29, 30, 49, 64, 133], "configur": [9, 11, 13, 29, 30, 33, 49, 54, 55, 57, 62, 63, 90, 123, 129], "conveni": [9, 11, 29, 30, 49, 133], "iter": [9, 11, 29, 30, 49, 64, 122, 133], "ports_act": [9, 11, 29, 30, 49, 132], "check": [9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 29, 30, 33, 49, 58, 59, 84, 99, 103, 104, 108, 112, 115, 116, 118, 122, 123, 124, 125, 132, 133, 134], "overridden": [9, 11, 29, 30, 33, 49, 132, 133], "allow": [9, 11, 13, 14, 15, 17, 18, 19, 20, 21, 22, 29, 30, 33, 49, 78, 84, 92, 122, 123, 126, 131, 132, 133, 134], "scenario": [9, 11, 29, 30, 49, 132], "exampl": [9, 10, 11, 14, 15, 17, 18, 20, 21, 22, 27, 29, 30, 33, 49, 62, 80, 82, 85, 90, 93, 122, 123, 124, 131, 132, 133, 134], "case": [9, 11, 15, 22, 29, 30, 49, 64, 132, 133], "complex": [9, 11, 29, 30, 49, 132, 133, 134], "inter": [9, 11, 29, 30, 49, 132, 133], "By": [9, 11, 29, 30, 33, 49, 132, 133], "onli": [9, 11, 15, 22, 28, 29, 30, 49, 108, 122, 123, 124, 126, 132, 133], "mandatori": [9, 11, 29, 30, 49, 132], "inact": [9, 11, 29, 30, 49, 132, 133], "otherwis": [9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 29, 30, 33, 49, 58, 64, 104, 108, 112, 132, 133], "required_cal": [9, 11, 29, 30, 49, 63, 132, 133], "classvar": [9, 11, 29, 30, 49], "extern": [9, 11, 29, 30, 38, 49, 52, 115, 116, 117, 118, 123, 130], "commandlin": [9, 11, 29, 30, 49, 66, 70, 74, 122, 123, 129, 133], "program": [9, 11, 29, 30, 49, 62, 123, 133, 134], "required_packag": [9, 11, 29, 30, 49, 132, 133], "packag": [9, 11, 29, 30, 49, 62, 68, 124, 127, 132, 133], "instanc": [9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 29, 30, 33, 49, 54, 81, 90, 101, 117, 119, 121, 122, 123, 133], "run_tim": [9, 11, 29, 30, 40, 49], "send_upd": [9, 11, 29, 30, 49], "statu": [9, 11, 29, 30, 39, 40, 49, 85, 121, 123, 131, 132], "updat": [9, 11, 19, 29, 30, 39, 49, 62, 64, 85, 123, 124, 133], "serialized_summari": [9, 11, 29, 30, 49], "_serialtyp": [9, 11, 29, 30, 49], "represent": [9, 11, 19, 29, 30, 49], "nest": [9, 11, 29, 30, 49, 109, 111, 121, 133], "structur": [9, 11, 29, 30, 49, 73, 123, 133], "o": [9, 11, 29, 30, 49, 80, 133], "merg": [9, 11, 29, 30, 49, 122, 123, 124, 125, 132], "inp": [9, 11, 17, 29, 30, 49, 80, 82, 90, 122, 125, 131, 132, 133, 134], "setup_directori": [9, 11, 29, 30, 49], "parent_path": [9, 11, 29, 30, 49], "up": [9, 11, 29, 30, 44, 45, 49, 50, 74, 113, 126, 133], "update_paramet": [9, 11, 14, 22, 29, 30, 49], "kwarg": [9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 29, 30, 49, 64, 79, 82, 90, 131, 132], "valu": [9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 29, 30, 33, 38, 49, 62, 64, 84, 90, 92, 110, 112, 122, 123, 125, 131, 132, 133, 134], "pair": [9, 11, 29, 30, 49, 63, 64, 96, 110, 133], "suppli": [9, 11, 29, 30, 49, 129], "keyword": [9, 11, 29, 30, 49, 81, 133], "argument": [9, 11, 29, 30, 33, 49, 66, 70, 80, 81, 82, 124, 127, 133], "work_dir": [9, 11, 29, 30, 49], "work": [9, 11, 29, 30, 49, 54, 122, 124, 133], "individu": [10, 11, 20, 28, 49, 122, 123, 133], "extend": 10, "featur": [10, 124, 133], "done": [10, 30, 122, 133], "programat": 10, "strict": [11, 49, 108, 122, 124], "default_channel_s": [11, 49, 133], "10": [11, 49, 122, 127], "As": [11, 49], "instanti": [11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 29, 30, 35, 49, 54, 90, 122, 123, 133], "add": [11, 14, 22, 46, 49, 80, 82, 122, 123, 124, 125, 127, 129, 131, 133, 134], "them": [11, 15, 17, 18, 20, 21, 24, 49, 122, 123, 124, 131, 132, 133, 134], "To": [11, 15, 29, 30, 33, 122, 124, 127, 133, 134], "construct": [11, 13, 19, 49, 122, 123, 133], "creat": [11, 30, 41, 42, 49, 62, 64, 66, 73, 79, 82, 90, 113, 121, 122, 123, 124, 127, 131, 132, 133, 134], "overwrit": [11, 19, 131, 133], "normal": [11, 17, 18, 29, 30, 49, 90, 94, 122, 131, 133], "parameteris": [11, 15, 131], "instead": [11, 15, 19, 29, 30, 33, 49, 123, 127, 133], "you": [11, 19, 33, 49, 62, 122, 123, 124, 127, 131, 133, 134], "mai": [11, 16, 22, 49, 62, 122, 123, 124, 127, 133], "want": [11, 19, 33, 49, 122, 127, 133], "switch": 11, "re": [11, 49, 122, 133], "autom": [11, 122], "each": [11, 29, 30, 36, 49, 54, 62, 122, 123, 133, 134], "part": [11, 15, 16, 17, 18, 20, 21, 24, 123, 133], "graphbuildexcept": [11, 49], "wa": [11, 14, 15, 19, 22, 29, 30, 49, 54, 58, 116, 118, 133], "error": [11, 48, 49, 56, 123, 133], "e": [11, 46, 49, 54, 64, 122, 123, 126, 127, 133], "g": [11, 49, 122, 133], "defin": [11, 28, 29, 30, 50, 62, 114, 122, 123, 125, 130, 131, 133, 134], "wrap": [11, 29, 30, 82, 90, 122, 123, 133], "delai": [11, 122, 125, 132, 133], "out": [11, 18, 20, 27, 29, 30, 33, 49, 64, 80, 82, 122, 125, 131, 132, 133, 134], "def": [11, 17, 18, 27, 29, 30, 49, 122, 125, 133, 134], "self": [11, 15, 17, 18, 21, 27, 29, 30, 49, 62, 63, 122, 125, 133, 134], "2": [11, 17, 18, 29, 30, 33, 64, 80, 90, 125, 133], "map_port": [11, 49, 123, 125, 133], "map": [11, 19, 33, 49, 63, 122, 133], "just": [11, 33, 49, 54, 122, 123, 127, 131, 133, 134], "like": [11, 27, 33, 49, 64, 104, 122, 123, 127, 131, 133], "active_nod": [11, 49], "flatten": [11, 49, 133], "u": [11, 19, 49, 109, 111], "uniqu": [11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 49, 113, 123, 133], "constructor": [11, 49, 133], "initi": [11, 30, 33, 38, 43, 49, 74, 84, 123, 133], "exist": [11, 14, 49, 79, 122, 131, 133], "foo": [11, 14, 22, 29, 30, 49, 90, 133], "val": [11, 14, 15, 22, 29, 30, 49, 125, 133], "42": [11, 14, 15, 18, 21, 22, 29, 30, 49, 62, 90, 133], "bar": [11, 29, 30, 49, 90, 133], "add_al": [11, 49, 133], "c1": 11, "_t1": 11, "c2": 11, "_t2": 11, "c3": 11, "_t3": 11, "c4": 11, "_t4": 11, "c5": 11, "_t5": 11, "c6": 11, "_t6": 11, "specifi": [11, 14, 15, 17, 18, 20, 21, 22, 24, 33, 49, 62, 64, 102, 116, 118, 122, 124, 131, 133], "auto_connect": [11, 49, 133], "automat": [11, 19, 49, 127, 133, 134], "realli": [11, 49], "unambigu": [11, 49], "lead": [11, 27, 49], "partial": [11, 30, 49], "overrid": [11, 49, 133], "encapsul": [11, 28, 49, 123], "lower": [11, 49, 124], "addition": [11, 49], "map_paramet": [11, 49, 123], "param": [11, 29, 30, 49, 90, 122, 133], "chain": [11, 49, 133], "sequenc": [11, 19, 29, 30, 49, 54, 65, 75, 76, 82, 106, 122, 132, 133], "baz": [11, 29, 30, 49], "built": [11, 29, 30, 49, 74, 124, 133], "correctli": [11, 29, 30, 49, 133], "warn": [11, 49, 59, 124, 133], "about": [11, 49, 126, 133], "deadlock": [11, 49, 123, 133], "ha": [11, 14, 15, 19, 22, 49, 64, 115, 116, 118, 119, 122, 123, 133], "match": [11, 14, 15, 22, 49, 107, 108, 115, 133], "check_depend": [11, 29, 30, 49], "combine_paramet": [11, 19, 49, 122, 125, 133], "t_co": [11, 49], "multiparamet": [11, 49], "low": [11, 19, 49], "high": [11, 19, 29, 30, 49, 133], "within": [11, 36, 49, 133], "handl": [11, 16, 29, 30, 49, 123, 129], "combin": [11, 19, 49, 122, 132], "multioutput": [11, 13, 49, 126, 132, 133], "don": [11, 49, 133], "support": [11, 49, 124, 133], "your": [11, 30, 33, 49, 54, 122, 124, 131, 133], "been": [11, 14, 15, 19, 22, 49, 62, 122, 133], "reach": [11, 49, 122], "connect_al": [11, 49, 80, 82, 122, 133], "p1": 11, "p": [11, 14, 131], "p2": 11, "p3": 11, "p4": 11, "p5": 11, "p6": 11, "flat_channel": [11, 49], "flat_compon": [11, 49], "flat_nod": [11, 49], "get_nod": [11, 49], "find": [11, 49, 68, 86, 87, 99, 124, 127, 133], "target": [11, 36, 49], "keyerror": [11, 49, 64], "found": [11, 14, 29, 30, 49, 64, 97, 98, 99, 116, 118, 123, 124, 133], "subsubgraph": [11, 49], "get_port": [11, 49], "child": [11, 45, 49, 90, 123], "onto": [11, 49], "more": [11, 19, 29, 30, 49, 54, 116, 123, 133], "fine": [11, 49, 133], "grain": [11, 49, 133], "control": [11, 49, 132, 133], "over": [11, 14, 22, 49, 122, 132, 133], "_p": [11, 49], "visual": [11, 49, 121], "max_level": [11, 49, 121], "9223372036854775807": [11, 49, 121], "color": [11, 33, 49, 121], "label": [11, 49, 121, 122], "graphviz": [11, 49, 121, 127], "instal": [11, 49, 133], "show": [11, 33, 49, 133], "dot": [11, 27, 49, 121], "jupyt": [11, 49], "notebook": [11, 49], "displai": [11, 49], "encompass": [13, 124], "fileparamet": [13, 22, 27, 29, 30, 126, 131], "simpl": [13, 114, 133, 134], "attach": 13, "usag": [13, 133], "correct": [13, 27, 123, 133], "arg": [14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 49, 64, 79], "provis": 14, "exist_requir": 14, "filenotfounderror": 14, "doesn": [14, 15, 22, 27, 49, 124, 131, 133], "_tinter": [14, 15, 16, 17, 18, 19, 20, 21, 22, 24], "refer": [14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 123, 126, 133, 134], "chang": [14, 15, 19, 22, 29, 30, 33, 94, 124, 132, 133], "valid": [14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 29, 30, 33, 54, 112, 115, 116, 117, 118, 133], "annot": [14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 97, 98, 112], "typecheck": [14, 15, 16, 17, 18, 19, 20, 21, 22, 24], "filepath": 14, "is_default": [14, 15, 19, 22], "is_set": [14, 15, 19, 22], "indic": [14, 15, 19, 22, 30, 115, 117, 119, 123, 133], "valueerror": [14, 15, 22, 27, 84], "point": [14, 22, 29, 30, 33, 49, 126, 133], "onc": [14, 22, 29, 30, 54, 62, 122, 133], "anoth": [15, 122, 133], "dynam": [15, 17, 18, 20, 79, 133], "befor": [15, 29, 30, 33, 36, 54, 122, 123, 126, 132, 133], "obtain": 15, "make": [15, 19, 33, 86, 106, 122, 123, 124, 132, 133], "behav": [15, 122, 133], "analog": [15, 122], "default_factori": [15, 22, 133], "factori": [15, 22, 49, 50, 55, 62, 63], "mutabl": [15, 22], "continu": [15, 17, 18, 20, 21, 24, 122, 123, 133], "poll": [15, 17, 18, 20, 21, 24, 123], "doe": [15, 64, 133], "have": [15, 27, 62, 82, 122, 123, 126, 133, 134], "access": [15, 17, 18, 20, 49, 133], "determin": [15, 33, 133], "stai": [15, 17, 18, 20, 24], "aliv": [15, 17, 18, 20, 24], "neighbour": [15, 17, 18, 20, 21, 24, 89, 133], "cach": [15, 133], "latest": 15, "immedi": [15, 26, 133], "where": [15, 19, 62, 122, 133], "some": [15, 19, 49, 114, 122, 123, 124, 126, 133], "constant": [15, 82], "those": [15, 19, 133], "portexcept": [15, 17, 18, 20, 21, 24], "callabl": [15, 22, 29, 30, 49, 50, 60, 63, 79, 80, 81, 122], "detect": [15, 17, 18, 20, 21, 24, 133], "subsequ": [15, 17, 18, 20, 21, 24], "caus": [15, 17, 18, 20, 21, 24, 36, 122, 123, 133], "shut": [15, 17, 18, 20, 21, 24, 29, 30, 49, 133], "down": [15, 17, 18, 20, 21, 24, 29, 30, 49, 133], "dump": [15, 17], "is_connect": [15, 17, 18, 20, 21, 24], "_porttyp": [15, 17, 18, 20, 21, 24], "typeguard": [15, 17, 18, 20, 21, 24], "_portchannel": [15, 17, 18, 20, 21, 24], "read": [15, 22, 49, 62, 63, 71, 122, 129, 133, 134], "thu": [15, 16, 22, 49, 123, 133, 134], "els": [15, 64, 122], "portinterrupt": [15, 133], "special": [15, 33, 49, 122, 123, 131, 133], "signal": [15, 36, 43, 49, 123, 132, 133], "quit": [15, 26], "further": [15, 122, 123, 126, 133], "try": [15, 21, 27, 123], "receive_opt": [15, 133], "utilis": 15, "flag": [15, 22, 133], "isn": 15, "avoid": [15, 26, 122, 123, 133], "behaviour": [15, 16, 28, 33, 90, 123, 124, 133], "parameterexcept": 15, "associ": [15, 16, 17, 18, 20, 21, 22, 24, 90, 133], "alia": [15, 22, 53], "common": [16, 65, 133], "librari": [16, 22], "alwai": [16, 22, 123, 133], "usabl": [16, 22], "isinst": [16, 22], "multiport": [17, 18, 133], "aggreg": [17, 18, 20, 41], "index": [17, 18, 20, 124, 134], "n_port": [17, 18, 20], "creation": [17, 18, 20, 33], "b": [17, 122, 125], "free": 18, "69": 18, "often": [19, 122, 133], "wish": [19, 123, 127], "perform": [19, 29, 30, 123, 124, 132, 133], "elabor": 19, "do": [19, 122, 127, 133], "background": 19, "separ": [19, 37, 49, 60, 70, 122, 123, 132, 133, 134], "nesteddict": [19, 109, 111], "parametermappingtyp": 19, "origin": [19, 122, 124, 133], "integr": [20, 133], "through": [20, 21, 28, 49, 122, 123, 132, 133, 134], "In": [21, 27, 64, 123, 133], "boolean": [22, 117, 119], "interrupt": [26, 29, 30, 43], "propag": 26, "downstream": [26, 133], "util": [27, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 133], "restrict": 27, "pdb": [27, 29, 30], "gro": 27, "tpr": 27, "conf": 27, "xyz": 27, "pred": 27, "get_arg": 27, "practic": [27, 133], "might": [27, 62, 122, 133], "look": [27, 115, 117, 122, 133], "para": 27, "comput": [28, 33, 38, 83, 85, 123, 133, 134], "environ": [28, 29, 30, 62, 94, 105, 110, 124, 127, 132, 133, 134], "max_loop": [29, 30, 131, 132, 133], "initial_statu": [29, 30, 131, 132], "not_readi": [29, 30, 38, 131, 132], "variant": [29, 122], "its": [29, 123, 124, 127, 133], "batch_opt": [29, 30, 133], "jobresourceconfig": [29, 30, 54, 133], "command": [29, 30, 38, 54, 56, 58, 62, 63, 99, 115, 116, 117, 118, 119, 124, 127], "batch": [29, 30, 54, 62, 82, 122, 132, 133], "local": [29, 30, 33, 54, 57, 62, 124, 133], "add_input": [29, 30], "add_paramet": [29, 30], "nodebuildexcept": [29, 30], "didn": [29, 30], "declar": [29, 30, 123, 133], "least": [29, 30, 123, 133], "met": [29, 30], "prepar": [29, 30, 54, 132, 133], "were": [29, 30, 99, 133], "importerror": [29, 30], "check_paramet": [29, 30], "cleanup": [29, 30, 34, 37, 49], "entrypoint": [29, 30], "keyboardinterrupt": [29, 30], "underli": [29, 30, 123], "get": [29, 30, 33, 64, 89, 122, 123, 127, 131, 133, 134], "sigint": [29, 30], "ones": [29, 30, 36, 123, 133], "follow": [29, 30, 33, 64, 123, 124, 127, 132, 133, 134], "variabl": [29, 30, 62, 67, 97, 110, 131, 132, 133], "config": [29, 30, 49, 54, 63, 90, 127, 132, 133], "lmod": [29, 30, 105, 132], "import": [29, 30, 122, 124, 125, 127, 132, 133, 134], "softwar": [29, 30, 52, 63, 122, 132], "manag": [29, 30, 36, 54, 57, 83, 85, 86, 134], "run_command": [29, 30, 133], "verbos": [29, 30, 54, 133], "raise_on_failur": [29, 30, 54, 59, 133], "command_input": [29, 30, 54, 133], "pre_execut": [29, 30, 54, 133], "completedprocess": [29, 30, 54, 59, 117, 119, 133], "string": [29, 30, 33, 41, 42, 49, 54, 63, 92, 99, 113, 115, 117, 118, 133], "One": [29, 30, 54, 123, 133], "result": [29, 30, 33, 54, 59, 123, 125, 133, 134], "stderr": [29, 30, 54, 117], "encount": [29, 30, 49, 133], "text": [29, 30, 33, 54], "job": [29, 30, 54, 55, 57, 62], "runtim": [29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49, 54, 133], "unlimit": [29, 30, 54], "subprocess": [29, 30, 54, 117, 119, 133], "processerror": [29, 30, 54], "fail": [29, 30, 38, 40, 49, 54, 56, 115, 133], "returncod": [29, 30, 54, 59, 133], "zero": [29, 30, 54], "echo": [29, 30, 133], "successvalid": [29, 30], "run_multi": [29, 30, 133], "working_dir": [29, 30, 54, 133], "n_job": [29, 30, 54, 85, 133], "parallel": [29, 30, 32, 54, 122], "spawn": [29, 30, 54, 133], "compat": [29, 30, 86, 108, 123, 127, 133], "note": [29, 30, 40, 122, 127, 131, 133], "per": [29, 30], "script": [29, 30, 62, 63, 74, 133], "scriptspectyp": 29, "interpret": [29, 30, 62, 63, 133], "gracefulli": [29, 30], "runnabl": [30, 34, 36, 43, 49, 50, 133], "start": [30, 36, 49, 93, 122, 123, 124, 127, 133, 134], "semaphor": [30, 38, 84], "reserv": [30, 133], "wai": [30, 123, 133], "locat": [30, 62, 63, 99, 124, 131, 133], "faulti": 31, "infrastructur": 32, "enabl": [32, 133], "fmt": 33, "datefmt": 33, "style": [33, 96], "_formatstyl": 33, "formatt": [33, 124], "format": [33, 41, 42, 49, 71, 77, 133], "describ": [33, 123, 133], "abov": [33, 122, 124, 133], "date": 33, "omit": [33, 124], "iso8601": 33, "rfc": 33, "3339": 33, "templat": [33, 49, 63, 129, 133], "version": 33, "3": [33, 82, 85, 92, 122, 127, 131, 133], "ad": [33, 70, 122, 123, 127], "convert": [33, 79, 80, 81, 101, 109, 111, 121, 133], "localtim": 33, "tm_year": 33, "tm_mon": 33, "tm_mdai": 33, "tm_hour": 33, "tm_min": 33, "tm_sec": 33, "tm_wdai": 33, "tm_ydai": 33, "tm_isdst": 33, "sinc": 33, "epoch": 33, "express": [33, 107], "record": 33, "logrecord": [33, 34, 45], "operand": 33, "oper": 33, "which": [33, 122, 133], "yield": 33, "coupl": [33, 133], "preparatori": 33, "carri": 33, "getmessag": 33, "usestim": 33, "formattim": 33, "event": 33, "inform": [33, 41, 42, 49, 123, 126, 133], "formatexcept": 33, "append": 33, "ei": 33, "traceback": [33, 35], "print_except": 33, "formatstack": 33, "stack_info": 33, "extens": [33, 124, 127, 133], "stack": 33, "print_stack": 33, "last": [33, 64, 80, 123], "trail": 33, "newlin": 33, "basic": [33, 123], "strftime": 33, "particular": [33, 133], "gmtime": 33, "shown": [33, 133], "gmt": 33, "message_queu": 34, "20": [34, 44, 45], "global": [34, 45, 49, 62, 90, 110, 133], "from_traceback_except": 35, "wait_tim": 36, "pool": 36, "enter": 36, "exit": [36, 123, 133], "join": [36, 123, 125, 133, 134], "remain": 36, "termin": [36, 49], "n_process": 36, "total": [36, 41], "strenum": 38, "successfulli": [38, 119], "everyth": [38, 122, 127], "via": [38, 131], "Not": [38, 133], "io": [38, 46, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 122, 125, 131, 133], "interact": [38, 123, 133, 134], "stop": [38, 40, 49, 93, 123, 125, 127, 133], "becaus": [38, 123, 133], "waiting_for_command": 38, "waiting_for_input": 38, "waiting_for_output": 38, "backpressur": 38, "due": [38, 54, 133], "waiting_for_resourc": 38, "descriptor": 39, "timedelta": [40, 41, 93], "datetim": 40, "summar": [40, 133], "spent": 40, "print": [40, 93], "statusupd": [41, 42, 49, 123], "signal_object": 43, "handler": 43, "n_signal": 43, "being": [44, 45, 122, 133], "logging_queu": 45, "top": [46, 49, 126, 133], "orchestr": 46, "definit": [48, 49, 50, 122, 126], "pars": [48, 49, 70, 129, 133], "add_argu": 49, "parser": [49, 66, 70, 133], "_a": 49, "argpars": [49, 66], "argumentpars": [49, 66, 70], "_argumentgroup": 49, "update_with_arg": 49, "update_settings_with_arg": 49, "clean": [49, 123, 133], "entri": [49, 62, 133], "howev": [49, 133], "finish": [49, 123, 133], "nodeexcept": 49, "from_checkpoint": 49, "section": [49, 62, 133], "_data": 49, "store": [49, 89], "_statu": 49, "we": [49, 62, 122, 123, 124, 127, 133], "binari": 49, "status": 49, "parsingexcept": 49, "conform": [49, 123], "expect": [49, 115, 116, 117, 118, 123, 133], "from_dict": [49, 63, 133], "suitabl": [49, 124, 133], "well": [49, 123, 124], "For": [49, 122, 130, 133], "detail": [49, 123, 133], "see": [49, 92, 122, 123, 124, 126, 127, 130, 133], "read_input": 49, "from_fil": [49, 133], "json": [49, 71, 77, 133], "yaml": [49, 71, 77, 127, 133], "toml": [49, 62, 63, 71, 77, 127, 133], "info": [49, 125, 134], "examplenod": [49, 82], "below": 49, "40": 49, "from_nam": 49, "predefin": 49, "previous": [49, 90, 131, 133], "under": [49, 124, 133], "generate_config_templ": [49, 133], "get_available_workflow": 49, "get_workflow_summari": 49, "load_checkpoint": 49, "field": 49, "to_checkpoint": 49, "save": [49, 62, 77, 122, 123, 131, 133], "set_global_attribut": 49, "_workflow__nam": 49, "_workflow__valu": 49, "state": [49, 123, 129, 133], "live": 49, "filenam": [49, 69], "write": [49, 133], "problem": [49, 54, 133], "checkpointexcept": 49, "to_dict": [49, 133], "equival": [49, 133], "to_fil": [49, 133], "infer": 49, "suffix": [49, 99], "yml": [49, 127, 133, 134], "namespac": [49, 62, 68, 70], "h": [49, 122], "extra_opt": 49, "parse_arg": 49, "reus": 49, "unexpect": 49, "fulli": [50, 99, 124], "commandrunnerpsij": 53, "prefer_batch": 54, "rm_config": 54, "resourcemanagerconfig": [54, 62, 133], "psi": 54, "j": 54, "prefer": [54, 133], "recommend": [54, 127, 133], "outsid": [54, 123], "subtl": 54, "thread": 54, "interplai": 54, "submiss": [54, 62], "slurm": [54, 57, 62, 133], "run_onli": 54, "run_parallel": 54, "run_valid": 54, "processes_per_nod": 55, "cores_per_process": 55, "gpus_per_process": 55, "exclusive_us": 55, "walltim": [55, 57, 62, 133], "custom_attribut": 55, "rp": [57, 62, 133], "pbspro": [57, 62, 133], "lsf": [57, 62, 133], "flux": [57, 62, 133], "cobalt": [57, 62, 133], "max_job": [57, 62, 133], "100": [57, 62, 107, 122, 124, 133], "project": [57, 62, 133], "launcher": [57, 62, 133], "24": [57, 62, 133], "00": [57, 62, 133], "successful": 58, "func": [60, 79, 80], "variou": [61, 91, 133], "scratch": [62, 133], "pathlib": [62, 63, 122, 133], "posixpath": 62, "tmp": [62, 133], "tmp_4dt71zi": 62, "batch_config": 62, "here": [62, 116, 118, 122, 133], "other_exampl": [62, 133], "other_vari": [62, 133], "submit": [62, 133], "your_project": [62, 133], "srun": [62, 133], "usual": [62, 133], "mpirun": [62, 133], "mpiexec": [62, 133], "limit": [62, 123, 133], "shorter": [62, 133], "improv": [62, 122, 133], "next": [62, 133], "program_modul": [62, 133], "other_program": [62, 133], "expand": [62, 67, 133], "another_program": [62, 133], "module_env_var": [62, 133], "folder": [62, 124, 129, 131, 133], "from_default": 62, "maize_config": [62, 133], "generate_templ": 63, "nodeconfigdict": 63, "generate_template_toml": 63, "typeddict": 64, "clear": 64, "d": [64, 125, 133], "shallow": 64, "fromkei": 64, "kei": [64, 75, 76, 123, 133], "pop": [64, 131], "k": 64, "v": [64, 124], "popitem": 64, "lifo": 64, "order": [64, 133], "setdefault": 64, "insert": 64, "f": [64, 127, 133, 134], "present": [64, 89], "lack": 64, "shell": 67, "moduletyp": [68, 69], "initialis": 70, "sort": 70, "dest": 73, "preserv": 73, "so": [74, 123, 127, 133], "subset": [75, 76], "certain": [78, 122, 123], "modif": [78, 123, 133], "macro": [79, 80, 81, 82, 122], "anonym": 80, "lambda": 80, "take": [80, 81, 133], "produc": [80, 122], "lam": 80, "flow": [80, 82, 121, 122, 123, 125, 132, 133, 134], "x": [80, 97, 124], "cl": [81, 90], "constructor_arg": 81, "node_typ": [82, 96], "n_branch": [82, 122], "constant_input": 82, "exact": [82, 123], "invari": 82, "parallel_nod": 82, "inp_oth": 82, "inp_const": 82, "input_nod": 82, "other_input_nod": 82, "const_input": 82, "output_nod": 82, "max_count": [84, 85], "sleep": [84, 133], "chunk": [84, 122, 132], "acquisit": 84, "acquir": [84, 85], "amount": [84, 122], "request": [84, 123], "exce": 84, "releas": [84, 124], "count": 85, "do_someth": [85, 93], "respect": [86, 123, 133], "affin": 86, "cluster": 86, "test": [89, 90, 125, 127, 133], "mock": [89, 90], "simul": [89, 90], "assert": 89, "uncondition": [89, 133], "rig": 90, "mockchannel": [90, 124], "set_input": 90, "set_paramet": 90, "n_output": 90, "setup_run": 90, "unclassifi": 91, "enum": 92, "auto": 92, "11": 92, "paus": 93, "do_something_els": 93, "elapsed_tim": 93, "elaps": 93, "temporarili": 93, "exec_path": 94, "sy": 94, "n": 95, "split": [95, 122], "dataset": [95, 132], "extract": [96, 97, 98], "docstr": [96, 124], "pep": [96, 124], "258": 96, "owner": 97, "wasn": [97, 98], "obj": 98, "reli": 99, "easili": [99, 122, 123], "identifi": [99, 113], "token": 99, "cycl": [100, 122, 125, 132, 133, 134], "multidigraph": 101, "networkx": [101, 127], "nx": 101, "arg1": [104, 108], "char": 107, "anystr": 107, "regular": 107, "charact": [107, 124, 133], "arg2": 108, "compar": 108, "exactli": 108, "__data": 109, "sequenti": [109, 111, 133], "env": [110, 127, 134], "against": 112, "union": 112, "length": [113, 124], "6": [113, 133], "somewhat": 113, "id": 113, "random": [113, 133], "made": [113, 133], "lowercas": 113, "ascii": 113, "letter": 113, "digit": 113, "outputvalid": [115, 118], "search": [115, 116, 118, 129, 134], "zero_byte_check": 116, "succeed": [116, 118, 133], "success": [116, 117, 118, 119, 133], "_dot": 121, "digraph": 121, "_level": 121, "loaddata": [122, 131], "logresult": [122, 131], "your_modul": 122, "yournod": 122, "Then": 122, "17": 122, "my_nod": 122, "now": [122, 133], "final": [122, 123, 125, 133], "okai": 122, "written": [122, 124], "appear": [122, 123], "whenev": 122, "solut": 122, "until": [122, 133], "threshold": 122, "outlin": 122, "mean": [122, 131, 133], "calc": 122, "off": 122, "plumb": [122, 125, 130, 133], "diagram": 122, "out_fin": 122, "although": 122, "necessari": [122, 133], "rememb": 122, "constantli": 122, "matter": [122, 133], "easi": 122, "condit": [122, 133], "out_a": 122, "out_b": 122, "cours": 122, "even": [122, 129], "cond": 122, "incorpor": 122, "distribut": [122, 132, 133], "assum": 122, "our": [122, 133], "arriv": 122, "across": 122, "collect": [122, 123, 132], "again": [122, 133], "end": 122, "ll": 122, "emul": 122, "worker": 122, "scatter": [122, 132], "accumul": [122, 132], "roundrobin": [122, 132, 133], "c": [122, 127, 133], "decompos": [122, 132], "differ": [122, 123, 133], "bal": 122, "worker1": 122, "worker2": 122, "worker3": 122, "accu": 122, "n_packet": [122, 132], "altern": 122, "sometim": 122, "tediou": 122, "appli": 122, "worker_subgraph": 122, "setup_workflow": [122, 133], "__name__": [122, 133], "__main__": [122, 133], "help": [122, 133], "situat": [122, 133], "veri": [122, 125, 133], "larg": [122, 132, 133], "datapoint": [122, 133], "dock": 122, "100000": 122, "smile": 122, "code": [122, 123, 127, 133], "go": 122, "machin": [122, 133], "naiv": 122, "actual": [122, 123], "void": [122, 131], "autodockgpu": 122, "molecul": 122, "loadsmil": 122, "smiles2molecul": 122, "vina": [122, 133], "smi": 122, "gyp": 122, "adg": 122, "sco": 122, "score": 122, "100k": 122, "grid_fil": 122, "grid": 122, "rec": 122, "fld": 122, "scores_onli": 122, "out_scor": 122, "embed": 122, "memori": 122, "possibli": 122, "backend": 122, "ineffici": 122, "inner": 122, "accomplish": [122, 123, 133], "bat": 122, "reassembl": 122, "shape": 122, "com": 122, "ndarrai": [122, 132], "np": 122, "float32": 122, "n_batch": [122, 132], "techniqu": 122, "document": [123, 126, 128, 130, 134], "intend": 123, "anyon": 123, "overview": 123, "briefli": 123, "cover": [123, 124], "face": [123, 133], "aspect": 123, "most": [123, 133], "guid": [123, 124], "At": [123, 133], "paradigm": [123, 133], "model": [123, 134], "among": 123, "inde": 123, "contrari": 123, "direct": [123, 125], "acycl": [123, 125], "simultan": [123, 133], "soon": 123, "inherit": 123, "bodi": [123, 133], "logic": [123, 133], "fact": 123, "These": [123, 131, 132, 133], "though": [123, 133], "layout": 123, "obvious": 123, "sit": [123, 133], "leav": 123, "everi": [123, 124, 133, 134], "hierarchi": 123, "children": 123, "address": 123, "mani": [123, 133], "how": [123, 133], "world": [123, 125, 134], "There": [123, 124, 133], "compil": 123, "excess": 123, "boilerpl": 123, "safe": 123, "checker": 123, "mypi": [123, 124, 127], "verifi": 123, "divid": 123, "enough": 123, "wide": 123, "catch": 123, "long": [123, 133], "ignor": [123, 124], "respons": 123, "cleanli": 123, "privat": 123, "_attempt_loop": 123, "capac": 123, "unrespons": 123, "frozen": 123, "monitor": 123, "upstream": [123, 133], "intent": 123, "cascad": 123, "mimick": 123, "classifi": 123, "calcul": [123, 133], "skip": 123, "cyclic": [123, 125], "topologi": [123, 133, 134], "prone": 123, "sure": [123, 133], "strategi": 123, "convent": 124, "contrib": [124, 127, 130, 133, 134], "easiest": 124, "domain": [124, 127, 130], "edit": [124, 127], "8": [124, 133], "black": 124, "silent": 124, "miss": 124, "hint": 124, "yet": 124, "higher": 124, "646": 124, "mypypath": 124, "setuptool": [124, 127], "public": 124, "numpi": [124, 127], "standard": [124, 133], "readabl": 124, "reason": 124, "doc": 124, "sphinx": [124, 127], "html": 124, "autosummari": 124, "_build": 124, "preview": 124, "webserv": 124, "m": 124, "http": 124, "server": 124, "8000": 124, "localhost": 124, "mention": [124, 133], "cookbook": 124, "ideal": 124, "necessit": 124, "deeper": 124, "fundament": [124, 133], "design": [124, 133], "pytest": [124, 127], "cli": 124, "debug": [124, 125, 133], "bit": [124, 131, 132], "easier": [124, 132], "testrig": 124, "coverag": 124, "report": 124, "cov": 124, "titl": 124, "changelog": 124, "md": 124, "increment": [124, 133], "__version__": 124, "commit": 124, "rebuild": 124, "remot": 124, "tag": 124, "git": 124, "vx": 124, "push": 124, "master": 124, "checkout": 124, "pull": 124, "hello": [125, 133, 134], "ish": [125, 134], "concatandprint": [125, 134], "ex1": [125, 134], "ex2": [125, 134], "concat": [125, 133, 134], "send_val": 125, "48": 125, "36": 125, "sg": [125, 133], "ret": 125, "brief": 126, "itself": [126, 133], "primari": 126, "partner": 126, "plan": [127, 134], "instruct": [127, 134], "sever": 127, "quickli": [127, 134], "conda": [127, 133, 134], "develop": [127, 128], "dev": [127, 131], "pip": 127, "legaci": 127, "editable_mod": 127, "tool": [127, 133], "pylint": 127, "pylanc": 127, "pyyaml": 127, "matplotlib": 127, "beartyp": 127, "psij": 127, "strongli": 127, "forg": 127, "technic": 128, "persist": 129, "plugin": 129, "gui": 129, "replac": 129, "apischema": 129, "pydant": 129, "jinja2": 129, "video": 129, "tutori": 129, "purpos": [131, 132, 133], "dummi": 131, "unus": 131, "noth": 131, "verbatim": 131, "loadfil": 131, "captur": 131, "14159": 131, "lost": 131, "savefil": 131, "appropri": [131, 133], "filetyp": 131, "swallow": 131, "whatev": 131, "null": 131, "pipe": [132, 133], "vari": 132, "independ": [132, 133], "packet": [132, 133], "barrier": 132, "onward": [132, 133], "inp_sign": 132, "held": 132, "stream": 132, "dtype": 132, "broadcast": 132, "fifo": 132, "basi": 132, "flexibl": [132, 133], "multipli": 132, "n_packag": 132, "alternatingli": [132, 133], "constitu": 132, "unpack": 132, "ye": [132, 133], "approach": 133, "manner": 133, "discuss": 133, "tailor": 133, "imag": 133, "anatomi": 133, "yellow": 133, "green": 133, "red": 133, "programmat": 133, "pipelin": [133, 134], "contrast": 133, "airflow": 133, "luigi": 133, "dure": 133, "node2": 133, "otherexampl": 133, "told": 133, "That": 133, "keep": 133, "accept": 133, "suit": 133, "unless": 133, "essenti": 133, "similarli": 133, "occasion": 133, "increas": 133, "lot": 133, "won": 133, "abl": 133, "registri": 133, "littl": 133, "sens": 133, "thing": 133, "forget": 133, "themselv": 133, "37": 133, "simplifi": 133, "conflict": 133, "desir": 133, "relev": 133, "framework": 133, "unintend": 133, "consequ": 133, "agnost": 133, "hpc": 133, "smaller": 133, "symlink": 133, "deal": 133, "simpli": 133, "Or": 133, "and_anoth": 133, "better": 133, "especi": 133, "ambigu": 133, "hood": 133, "temperatur": 133, "adjust": 133, "physic": 133, "readibl": 133, "recov": 133, "later": 133, "good": 133, "progress": 133, "On": 133, "guard": 133, "govern": 133, "py": 133, "short": 133, "l": 133, "q": 133, "quiet": 133, "silenc": 133, "na": 133, "cfg": 133, "far": 133, "simpler": 133, "othervinamodul": 133, "xdg_config_hom": 133, "xdg": 133, "confus": 133, "what": 133, "popul": 133, "ourselv": 133, "unit": 133, "clarifi": 133, "benefit": 133, "irrespect": 133, "therefor": 133, "mostli": 133, "conceptu": 133, "aid": 133, "prevent": 133, "mismatch": 133, "insid": 133, "create_large_fil": 133, "behind": 133, "scene": 133, "let": 133, "know": 133, "could": 133, "overwritten": 133, "repeat": 133, "akin": 133, "unix": 133, "super": 133, "loopednod": 133, "_output_cycl": 133, "_current_output": 133, "itertool": 133, "pattern": 133, "explicit": 133, "queri": 133, "hasn": 133, "still": 133, "particularli": 133, "begin": 133, "unchang": 133, "attract": 133, "rather": 133, "than": 133, "safer": 133, "typevar": 133, "throughout": 133, "minim": 133, "experiment": 133, "phase": 133, "heavili": 133, "accomod": 133, "mynod": 133, "head": 133, "discov": 133, "place": 133, "invoc": 133, "my_packag": 133, "probabl": 133, "sophist": 133, "someth": 133, "preced": 133, "accord": 133, "4": [133, 134], "did": 133, "05": 133, "do_something_heavi": 133, "syntax": 133, "worth": 133, "goe": 133, "wrong": 133, "manual": 133, "de": 133, "effici": 133, "chemistri": 134, "principl": 134, "effect": 134, "tast": 134, "page": 134}, "objects": {"maize": [[0, 0, 0, "-", "core"], [51, 0, 0, "-", "utilities"]], "maize.core": [[1, 0, 0, "-", "channels"], [8, 0, 0, "-", "component"], [10, 0, 0, "-", "graph"], [13, 0, 0, "-", "interface"], [28, 0, 0, "-", "node"], [32, 0, 0, "-", "runtime"], [46, 0, 0, "-", "workflow"]], "maize.core.channels": [[2, 1, 1, "", "Channel"], [3, 4, 1, "", "ChannelEmpty"], [4, 4, 1, "", "ChannelException"], [5, 4, 1, "", "ChannelFull"], [6, 1, 1, "", "DataChannel"], [7, 1, 1, "", "FileChannel"]], "maize.core.channels.Channel": [[2, 2, 1, "", "__init__"], [2, 3, 1, "", "active"], [2, 2, 1, "", "close"], [2, 2, 1, "", "flush"], [2, 2, 1, "", "kill"], [2, 3, 1, "", "ready"], [2, 2, 1, "", "receive"], [2, 2, 1, "", "send"], [2, 3, 1, "", "size"]], "maize.core.channels.DataChannel": [[6, 2, 1, "", "__init__"], [6, 3, 1, "", "active"], [6, 2, 1, "", "close"], [6, 2, 1, "", "flush"], [6, 2, 1, "", "kill"], [6, 2, 1, "", "preload"], [6, 3, 1, "", "ready"], [6, 2, 1, "", "receive"], [6, 2, 1, "", "send"], [6, 3, 1, "", "size"]], "maize.core.channels.FileChannel": [[7, 2, 1, "", "__init__"], [7, 3, 1, "", "active"], [7, 2, 1, "", "close"], [7, 2, 1, "", "flush"], [7, 2, 1, "", "kill"], [7, 2, 1, "", "preload"], [7, 3, 1, "", "ready"], [7, 2, 1, "", "receive"], [7, 2, 1, "", "send"], [7, 2, 1, "", "setup"], [7, 3, 1, "", "size"]], "maize.core.component": [[9, 1, 1, "", "Component"]], "maize.core.component.Component": [[9, 2, 1, "", "__init__"], [9, 3, 1, "", "all_parameters"], [9, 2, 1, "", "as_dict"], [9, 3, 1, "", "component_path"], [9, 5, 1, "", "datatype"], [9, 5, 1, "", "full_timer"], [9, 2, 1, "", "get_available_nodes"], [9, 2, 1, "", "get_inputs"], [9, 2, 1, "", "get_interfaces"], [9, 2, 1, "", "get_node_class"], [9, 2, 1, "", "get_outputs"], [9, 2, 1, "", "get_parameters"], [9, 2, 1, "", "get_summary_line"], [9, 5, 1, "", "logger"], [9, 3, 1, "", "n_inbound"], [9, 3, 1, "", "n_outbound"], [9, 3, 1, "", "node_config"], [9, 3, 1, "", "parents"], [9, 3, 1, "", "ports"], [9, 2, 1, "", "ports_active"], [9, 5, 1, "", "required_callables"], [9, 5, 1, "", "required_packages"], [9, 3, 1, "", "root"], [9, 5, 1, "", "run_timer"], [9, 2, 1, "", "send_update"], [9, 2, 1, "", "serialized_summary"], [9, 2, 1, "", "setup_directories"], [9, 5, 1, "", "status"], [9, 2, 1, "", "update_parameters"], [9, 5, 1, "", "work_dir"]], "maize.core.graph": [[11, 1, 1, "", "Graph"], [12, 4, 1, "", "GraphBuildException"]], "maize.core.graph.Graph": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "active_nodes"], [11, 2, 1, "", "add"], [11, 2, 1, "", "add_all"], [11, 3, 1, "", "all_parameters"], [11, 2, 1, "", "as_dict"], [11, 2, 1, "", "auto_connect"], [11, 2, 1, "", "build"], [11, 2, 1, "", "chain"], [11, 5, 1, "", "channels"], [11, 2, 1, "", "check"], [11, 2, 1, "", "check_dependencies"], [11, 2, 1, "", "combine_parameters"], [11, 3, 1, "", "component_path"], [11, 2, 1, "", "connect"], [11, 2, 1, "", "connect_all"], [11, 5, 1, "", "datatype"], [11, 3, 1, "", "flat_channels"], [11, 3, 1, "", "flat_components"], [11, 3, 1, "", "flat_nodes"], [11, 5, 1, "", "full_timer"], [11, 2, 1, "", "get_available_nodes"], [11, 2, 1, "", "get_inputs"], [11, 2, 1, "", "get_interfaces"], [11, 2, 1, "", "get_node"], [11, 2, 1, "", "get_node_class"], [11, 2, 1, "", "get_outputs"], [11, 2, 1, "", "get_parameter"], [11, 2, 1, "", "get_parameters"], [11, 2, 1, "", "get_port"], [11, 2, 1, "", "get_summary_line"], [11, 5, 1, "", "logger"], [11, 2, 1, "", "map"], [11, 2, 1, "", "map_port"], [11, 3, 1, "", "n_inbound"], [11, 3, 1, "", "n_outbound"], [11, 3, 1, "", "node_config"], [11, 5, 1, "", "nodes"], [11, 3, 1, "", "parents"], [11, 3, 1, "", "ports"], [11, 2, 1, "", "ports_active"], [11, 5, 1, "", "required_callables"], [11, 5, 1, "", "required_packages"], [11, 3, 1, "", "root"], [11, 5, 1, "", "run_timer"], [11, 2, 1, "", "send_update"], [11, 2, 1, "", "serialized_summary"], [11, 2, 1, "", "setup_directories"], [11, 5, 1, "", "status"], [11, 2, 1, "", "update_parameters"], [11, 2, 1, "", "visualize"], [11, 5, 1, "", "work_dir"]], "maize.core.interface": [[14, 1, 1, "", "FileParameter"], [15, 1, 1, "", "Input"], [16, 1, 1, "", "Interface"], [17, 1, 1, "", "MultiInput"], [18, 1, 1, "", "MultiOutput"], [19, 1, 1, "", "MultiParameter"], [20, 1, 1, "", "MultiPort"], [21, 1, 1, "", "Output"], [22, 1, 1, "", "Parameter"], [23, 4, 1, "", "ParameterException"], [24, 1, 1, "", "Port"], [25, 4, 1, "", "PortException"], [26, 4, 1, "", "PortInterrupt"], [27, 1, 1, "", "Suffix"]], "maize.core.interface.FileParameter": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "build"], [14, 3, 1, "", "changed"], [14, 2, 1, "", "check"], [14, 3, 1, "", "filepath"], [14, 3, 1, "", "is_default"], [14, 3, 1, "", "is_set"], [14, 3, 1, "", "path"], [14, 3, 1, "", "serialized"], [14, 2, 1, "", "set"], [14, 3, 1, "", "value"]], "maize.core.interface.Input": [[15, 2, 1, "", "__init__"], [15, 3, 1, "", "active"], [15, 2, 1, "", "build"], [15, 3, 1, "", "changed"], [15, 2, 1, "", "check"], [15, 2, 1, "", "close"], [15, 3, 1, "", "connected"], [15, 2, 1, "", "dump"], [15, 2, 1, "", "is_connected"], [15, 3, 1, "", "is_default"], [15, 3, 1, "", "is_set"], [15, 5, 1, "", "name"], [15, 5, 1, "", "parent"], [15, 3, 1, "", "path"], [15, 2, 1, "", "preload"], [15, 2, 1, "", "ready"], [15, 2, 1, "", "receive"], [15, 2, 1, "", "receive_optional"], [15, 3, 1, "", "serialized"], [15, 2, 1, "", "set"], [15, 2, 1, "", "set_channel"], [15, 3, 1, "", "size"], [15, 3, 1, "", "value"]], "maize.core.interface.Interface": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "build"], [16, 2, 1, "", "check"], [16, 5, 1, "", "datatype"], [16, 5, 1, "", "name"], [16, 5, 1, "", "parent"], [16, 3, 1, "", "path"], [16, 3, 1, "", "serialized"]], "maize.core.interface.MultiInput": [[17, 2, 1, "", "__init__"], [17, 3, 1, "", "active"], [17, 2, 1, "", "build"], [17, 2, 1, "", "check"], [17, 2, 1, "", "close"], [17, 3, 1, "", "connected"], [17, 3, 1, "", "default"], [17, 2, 1, "", "dump"], [17, 2, 1, "", "is_connected"], [17, 5, 1, "", "name"], [17, 5, 1, "", "parent"], [17, 3, 1, "", "path"], [17, 2, 1, "", "preload"], [17, 3, 1, "", "serialized"], [17, 2, 1, "", "set"], [17, 2, 1, "", "set_channel"], [17, 3, 1, "", "size"]], "maize.core.interface.MultiOutput": [[18, 2, 1, "", "__init__"], [18, 3, 1, "", "active"], [18, 2, 1, "", "build"], [18, 2, 1, "", "check"], [18, 2, 1, "", "close"], [18, 3, 1, "", "connected"], [18, 2, 1, "", "is_connected"], [18, 5, 1, "", "name"], [18, 5, 1, "", "parent"], [18, 3, 1, "", "path"], [18, 3, 1, "", "serialized"], [18, 2, 1, "", "set_channel"], [18, 3, 1, "", "size"]], "maize.core.interface.MultiParameter": [[19, 2, 1, "", "__init__"], [19, 2, 1, "", "as_dict"], [19, 2, 1, "", "build"], [19, 3, 1, "", "changed"], [19, 2, 1, "", "check"], [19, 3, 1, "", "is_default"], [19, 3, 1, "", "is_set"], [19, 5, 1, "", "name"], [19, 5, 1, "", "parent"], [19, 3, 1, "", "parents"], [19, 3, 1, "", "path"], [19, 3, 1, "", "serialized"], [19, 2, 1, "", "set"], [19, 3, 1, "", "value"]], "maize.core.interface.MultiPort": [[20, 2, 1, "", "__init__"], [20, 3, 1, "", "active"], [20, 2, 1, "", "build"], [20, 2, 1, "", "check"], [20, 2, 1, "", "close"], [20, 3, 1, "", "connected"], [20, 2, 1, "", "is_connected"], [20, 5, 1, "", "name"], [20, 5, 1, "", "parent"], [20, 3, 1, "", "path"], [20, 3, 1, "", "serialized"], [20, 2, 1, "", "set_channel"], [20, 3, 1, "", "size"]], "maize.core.interface.Output": [[21, 2, 1, "", "__init__"], [21, 3, 1, "", "active"], [21, 2, 1, "", "build"], [21, 2, 1, "", "check"], [21, 2, 1, "", "close"], [21, 3, 1, "", "connected"], [21, 2, 1, "", "is_connected"], [21, 5, 1, "", "name"], [21, 5, 1, "", "parent"], [21, 3, 1, "", "path"], [21, 2, 1, "", "send"], [21, 3, 1, "", "serialized"], [21, 2, 1, "", "set_channel"], [21, 3, 1, "", "size"]], "maize.core.interface.Parameter": [[22, 2, 1, "", "__init__"], [22, 2, 1, "", "build"], [22, 3, 1, "", "changed"], [22, 2, 1, "", "check"], [22, 5, 1, "", "datatype"], [22, 3, 1, "", "is_default"], [22, 3, 1, "", "is_set"], [22, 5, 1, "", "name"], [22, 5, 1, "", "parent"], [22, 3, 1, "", "path"], [22, 3, 1, "", "serialized"], [22, 2, 1, "", "set"], [22, 3, 1, "", "value"]], "maize.core.interface.Port": [[24, 2, 1, "", "__init__"], [24, 3, 1, "", "active"], [24, 2, 1, "", "build"], [24, 2, 1, "", "check"], [24, 2, 1, "", "close"], [24, 3, 1, "", "connected"], [24, 2, 1, "", "is_connected"], [24, 5, 1, "", "name"], [24, 5, 1, "", "parent"], [24, 3, 1, "", "path"], [24, 3, 1, "", "serialized"], [24, 2, 1, "", "set_channel"], [24, 3, 1, "", "size"]], "maize.core.interface.Suffix": [[27, 2, 1, "", "__init__"]], "maize.core.node": [[29, 1, 1, "", "LoopedNode"], [30, 1, 1, "", "Node"], [31, 4, 1, "", "NodeBuildException"]], "maize.core.node.LoopedNode": [[29, 2, 1, "", "__init__"], [29, 3, 1, "", "all_parameters"], [29, 2, 1, "", "as_dict"], [29, 5, 1, "", "batch_options"], [29, 2, 1, "", "build"], [29, 2, 1, "", "check"], [29, 2, 1, "", "check_dependencies"], [29, 2, 1, "", "check_parameters"], [29, 2, 1, "", "cleanup"], [29, 5, 1, "", "commands"], [29, 3, 1, "", "component_path"], [29, 5, 1, "", "datatype"], [29, 2, 1, "", "execute"], [29, 5, 1, "", "full_timer"], [29, 2, 1, "", "get_available_nodes"], [29, 2, 1, "", "get_inputs"], [29, 2, 1, "", "get_interfaces"], [29, 2, 1, "", "get_node_class"], [29, 2, 1, "", "get_outputs"], [29, 2, 1, "", "get_parameters"], [29, 2, 1, "", "get_summary_line"], [29, 5, 1, "", "logger"], [29, 5, 1, "", "modules"], [29, 3, 1, "", "n_inbound"], [29, 3, 1, "", "n_outbound"], [29, 3, 1, "", "node_config"], [29, 3, 1, "", "parents"], [29, 3, 1, "", "ports"], [29, 2, 1, "", "ports_active"], [29, 2, 1, "", "prepare"], [29, 5, 1, "", "python"], [29, 5, 1, "", "required_callables"], [29, 5, 1, "", "required_packages"], [29, 3, 1, "", "root"], [29, 2, 1, "", "run"], [29, 2, 1, "", "run_command"], [29, 2, 1, "", "run_multi"], [29, 5, 1, "", "run_timer"], [29, 5, 1, "", "scripts"], [29, 2, 1, "", "send_update"], [29, 2, 1, "", "serialized_summary"], [29, 2, 1, "", "setup_directories"], [29, 2, 1, "", "shutdown"], [29, 5, 1, "", "status"], [29, 2, 1, "", "update_parameters"], [29, 5, 1, "", "work_dir"]], "maize.core.node.Node": [[30, 2, 1, "", "__init__"], [30, 3, 1, "", "all_parameters"], [30, 2, 1, "", "as_dict"], [30, 5, 1, "", "batch_options"], [30, 2, 1, "", "build"], [30, 2, 1, "", "check"], [30, 2, 1, "", "check_dependencies"], [30, 2, 1, "", "check_parameters"], [30, 2, 1, "", "cleanup"], [30, 5, 1, "", "commands"], [30, 3, 1, "", "component_path"], [30, 5, 1, "", "cpus"], [30, 5, 1, "", "datatype"], [30, 2, 1, "", "execute"], [30, 5, 1, "", "full_timer"], [30, 2, 1, "", "get_available_nodes"], [30, 2, 1, "", "get_inputs"], [30, 2, 1, "", "get_interfaces"], [30, 2, 1, "", "get_node_class"], [30, 2, 1, "", "get_outputs"], [30, 2, 1, "", "get_parameters"], [30, 2, 1, "", "get_summary_line"], [30, 5, 1, "", "gpus"], [30, 5, 1, "", "logger"], [30, 5, 1, "", "modules"], [30, 3, 1, "", "n_inbound"], [30, 3, 1, "", "n_outbound"], [30, 3, 1, "", "node_config"], [30, 3, 1, "", "parents"], [30, 3, 1, "", "ports"], [30, 2, 1, "", "ports_active"], [30, 2, 1, "", "prepare"], [30, 5, 1, "", "python"], [30, 5, 1, "", "required_callables"], [30, 5, 1, "", "required_packages"], [30, 3, 1, "", "root"], [30, 2, 1, "", "run"], [30, 2, 1, "", "run_command"], [30, 2, 1, "", "run_multi"], [30, 5, 1, "", "run_timer"], [30, 5, 1, "", "scripts"], [30, 2, 1, "", "send_update"], [30, 2, 1, "", "serialized_summary"], [30, 2, 1, "", "setup_directories"], [30, 2, 1, "", "shutdown"], [30, 5, 1, "", "status"], [30, 2, 1, "", "update_parameters"], [30, 5, 1, "", "work_dir"]], "maize.core.runtime": [[33, 1, 1, "", "CustomFormat"], [34, 1, 1, "", "Logger"], [35, 4, 1, "", "NodeException"], [36, 1, 1, "", "RunPool"], [37, 1, 1, "", "Runnable"], [38, 1, 1, "", "Status"], [39, 1, 1, "", "StatusHandler"], [40, 1, 1, "", "StatusUpdate"], [41, 6, 1, "", "format_summaries"], [42, 6, 1, "", "format_update"], [43, 6, 1, "", "init_signal"], [44, 6, 1, "", "setup_build_logging"], [45, 6, 1, "", "setup_node_logging"]], "maize.core.runtime.CustomFormat": [[33, 2, 1, "", "__init__"], [33, 2, 1, "", "converter"], [33, 2, 1, "", "format"], [33, 2, 1, "", "formatException"], [33, 2, 1, "", "formatStack"], [33, 2, 1, "", "formatTime"], [33, 2, 1, "", "usesTime"]], "maize.core.runtime.Logger": [[34, 2, 1, "", "__init__"], [34, 2, 1, "", "cleanup"], [34, 2, 1, "", "execute"]], "maize.core.runtime.RunPool": [[36, 2, 1, "", "__init__"], [36, 3, 1, "", "n_processes"]], "maize.core.runtime.Runnable": [[37, 2, 1, "", "__init__"], [37, 2, 1, "", "cleanup"], [37, 2, 1, "", "execute"]], "maize.core.runtime.Status": [[38, 5, 1, "", "COMPLETED"], [38, 5, 1, "", "FAILED"], [38, 5, 1, "", "NOT_READY"], [38, 5, 1, "", "READY"], [38, 5, 1, "", "RUNNING"], [38, 5, 1, "", "STOPPED"], [38, 5, 1, "", "WAITING_FOR_COMMAND"], [38, 5, 1, "", "WAITING_FOR_INPUT"], [38, 5, 1, "", "WAITING_FOR_OUTPUT"], [38, 5, 1, "", "WAITING_FOR_RESOURCES"], [38, 2, 1, "", "__init__"]], "maize.core.runtime.StatusHandler": [[39, 2, 1, "", "__init__"]], "maize.core.runtime.StatusUpdate": [[40, 2, 1, "", "__init__"], [40, 5, 1, "", "full_time"], [40, 5, 1, "", "n_inbound"], [40, 5, 1, "", "n_outbound"], [40, 5, 1, "", "name"], [40, 5, 1, "", "note"], [40, 5, 1, "", "parents"], [40, 5, 1, "", "run_time"], [40, 5, 1, "", "status"]], "maize.core.workflow": [[47, 4, 1, "", "CheckpointException"], [48, 4, 1, "", "ParsingException"], [49, 1, 1, "", "Workflow"], [50, 6, 1, "", "expose"]], "maize.core.workflow.Workflow": [[49, 2, 1, "", "__init__"], [49, 3, 1, "", "active_nodes"], [49, 2, 1, "", "add"], [49, 2, 1, "", "add_all"], [49, 2, 1, "", "add_arguments"], [49, 3, 1, "", "all_parameters"], [49, 2, 1, "", "as_dict"], [49, 2, 1, "", "auto_connect"], [49, 2, 1, "", "build"], [49, 2, 1, "", "chain"], [49, 2, 1, "", "check"], [49, 2, 1, "", "check_dependencies"], [49, 2, 1, "", "cleanup"], [49, 2, 1, "", "combine_parameters"], [49, 3, 1, "", "component_path"], [49, 2, 1, "", "connect"], [49, 2, 1, "", "connect_all"], [49, 5, 1, "", "datatype"], [49, 2, 1, "", "execute"], [49, 3, 1, "", "flat_channels"], [49, 3, 1, "", "flat_components"], [49, 3, 1, "", "flat_nodes"], [49, 2, 1, "", "from_checkpoint"], [49, 2, 1, "", "from_dict"], [49, 2, 1, "", "from_file"], [49, 2, 1, "", "from_name"], [49, 5, 1, "", "full_timer"], [49, 2, 1, "", "generate_config_template"], [49, 2, 1, "", "get_available_nodes"], [49, 2, 1, "", "get_available_workflows"], [49, 2, 1, "", "get_inputs"], [49, 2, 1, "", "get_interfaces"], [49, 2, 1, "", "get_node"], [49, 2, 1, "", "get_node_class"], [49, 2, 1, "", "get_outputs"], [49, 2, 1, "", "get_parameter"], [49, 2, 1, "", "get_parameters"], [49, 2, 1, "", "get_port"], [49, 2, 1, "", "get_summary_line"], [49, 2, 1, "", "get_workflow_summary"], [49, 2, 1, "", "load_checkpoint"], [49, 5, 1, "", "logger"], [49, 2, 1, "", "map"], [49, 2, 1, "", "map_port"], [49, 3, 1, "", "n_inbound"], [49, 3, 1, "", "n_outbound"], [49, 3, 1, "", "node_config"], [49, 3, 1, "", "parents"], [49, 3, 1, "", "ports"], [49, 2, 1, "", "ports_active"], [49, 2, 1, "", "register"], [49, 5, 1, "", "required_callables"], [49, 5, 1, "", "required_packages"], [49, 3, 1, "", "root"], [49, 5, 1, "", "run_timer"], [49, 2, 1, "", "send_update"], [49, 2, 1, "", "serialized_summary"], [49, 2, 1, "", "set_global_attribute"], [49, 2, 1, "", "setup_directories"], [49, 5, 1, "", "status"], [49, 2, 1, "", "to_checkpoint"], [49, 2, 1, "", "to_dict"], [49, 2, 1, "", "to_file"], [49, 2, 1, "", "update_parameters"], [49, 2, 1, "", "update_settings_with_args"], [49, 2, 1, "", "update_with_args"], [49, 2, 1, "", "visualize"], [49, 5, 1, "", "work_dir"]], "maize.utilities": [[52, 0, 0, "-", "execution"], [61, 0, 0, "-", "io"], [78, 0, 0, "-", "macros"], [83, 0, 0, "-", "resources"], [88, 0, 0, "-", "testing"], [91, 0, 0, "-", "utilities"], [114, 0, 0, "-", "validation"], [120, 0, 0, "-", "visual"]], "maize.utilities.execution": [[53, 5, 1, "", "CommandRunner"], [54, 1, 1, "", "CommandRunnerPSIJ"], [55, 1, 1, "", "JobResourceConfig"], [56, 4, 1, "", "ProcessError"], [57, 1, 1, "", "ResourceManagerConfig"], [58, 6, 1, "", "check_executable"], [59, 6, 1, "", "check_returncode"], [60, 6, 1, "", "run_single_process"]], "maize.utilities.execution.CommandRunnerPSIJ": [[54, 2, 1, "", "__init__"], [54, 2, 1, "", "run"], [54, 2, 1, "", "run_only"], [54, 2, 1, "", "run_parallel"], [54, 2, 1, "", "run_validate"], [54, 2, 1, "", "validate"]], "maize.utilities.execution.JobResourceConfig": [[55, 2, 1, "", "__init__"]], "maize.utilities.execution.ResourceManagerConfig": [[57, 2, 1, "", "__init__"]], "maize.utilities.io": [[62, 1, 1, "", "Config"], [63, 1, 1, "", "NodeConfig"], [64, 1, 1, "", "NodeConfigDict"], [65, 6, 1, "", "common_parent"], [66, 6, 1, "", "create_default_parser"], [67, 6, 1, "", "expand_shell_vars"], [68, 6, 1, "", "get_plugins"], [69, 6, 1, "", "load_file"], [70, 6, 1, "", "parse_groups"], [71, 6, 1, "", "read_input"], [72, 6, 1, "", "remove_dir_contents"], [73, 6, 1, "", "sendtree"], [74, 6, 1, "", "setup_workflow"], [75, 6, 1, "", "with_fields"], [76, 6, 1, "", "with_keys"], [77, 6, 1, "", "write_input"]], "maize.utilities.io.Config": [[62, 2, 1, "", "__init__"], [62, 2, 1, "", "from_default"], [62, 2, 1, "", "update"]], "maize.utilities.io.NodeConfig": [[63, 2, 1, "", "__init__"], [63, 2, 1, "", "from_dict"], [63, 2, 1, "", "generate_template"], [63, 2, 1, "", "generate_template_toml"]], "maize.utilities.io.NodeConfigDict": [[64, 2, 1, "", "__init__"], [64, 2, 1, "", "clear"], [64, 2, 1, "", "copy"], [64, 2, 1, "", "fromkeys"], [64, 2, 1, "", "get"], [64, 2, 1, "", "items"], [64, 2, 1, "", "keys"], [64, 2, 1, "", "pop"], [64, 2, 1, "", "popitem"], [64, 2, 1, "", "setdefault"], [64, 2, 1, "", "update"], [64, 2, 1, "", "values"]], "maize.utilities.macros": [[79, 6, 1, "", "function_to_node"], [80, 6, 1, "", "lambda_node"], [81, 6, 1, "", "node_to_function"], [82, 6, 1, "", "parallel"]], "maize.utilities.resources": [[84, 1, 1, "", "ChunkedSemaphore"], [85, 1, 1, "", "Resources"], [86, 6, 1, "", "cpu_count"], [87, 6, 1, "", "gpu_count"]], "maize.utilities.resources.ChunkedSemaphore": [[84, 2, 1, "", "__init__"], [84, 2, 1, "", "acquire"], [84, 2, 1, "", "release"]], "maize.utilities.resources.Resources": [[85, 2, 1, "", "__init__"]], "maize.utilities.testing": [[89, 1, 1, "", "MockChannel"], [90, 1, 1, "", "TestRig"]], "maize.utilities.testing.MockChannel": [[89, 2, 1, "", "__init__"], [89, 3, 1, "", "active"], [89, 2, 1, "", "close"], [89, 2, 1, "", "flush"], [89, 2, 1, "", "get"], [89, 2, 1, "", "kill"], [89, 3, 1, "", "ready"], [89, 2, 1, "", "receive"], [89, 2, 1, "", "send"], [89, 3, 1, "", "size"]], "maize.utilities.testing.TestRig": [[90, 2, 1, "", "__init__"], [90, 5, 1, "", "inputs"], [90, 5, 1, "", "node"], [90, 5, 1, "", "parameters"], [90, 2, 1, "", "run"], [90, 2, 1, "", "set_inputs"], [90, 2, 1, "", "set_parameters"], [90, 2, 1, "", "setup"], [90, 2, 1, "", "setup_run"]], "maize.utilities.utilities": [[92, 1, 1, "", "StrEnum"], [93, 1, 1, "", "Timer"], [94, 6, 1, "", "change_environment"], [95, 6, 1, "", "chunks"], [96, 6, 1, "", "extract_attribute_docs"], [97, 6, 1, "", "extract_parent_type"], [98, 6, 1, "", "extract_type"], [99, 6, 1, "", "find_probable_files_from_command"], [100, 6, 1, "", "graph_cycles"], [101, 6, 1, "", "graph_to_nx"], [102, 6, 1, "", "has_file"], [103, 6, 1, "", "has_module_system"], [104, 6, 1, "", "is_path_type"], [105, 6, 1, "", "load_modules"], [106, 6, 1, "", "make_list"], [107, 6, 1, "", "match_context"], [108, 6, 1, "", "matching_types"], [109, 6, 1, "", "nested_dict_to_tuple"], [110, 6, 1, "", "set_environment"], [111, 6, 1, "", "tuple_to_nested_dict"], [112, 6, 1, "", "typecheck"], [113, 6, 1, "", "unique_id"]], "maize.utilities.utilities.StrEnum": [[92, 2, 1, "", "__init__"]], "maize.utilities.utilities.Timer": [[93, 2, 1, "", "__init__"], [93, 3, 1, "", "elapsed_time"], [93, 2, 1, "", "pause"], [93, 3, 1, "", "running"], [93, 2, 1, "", "start"], [93, 2, 1, "", "stop"]], "maize.utilities.validation": [[115, 1, 1, "", "FailValidator"], [116, 1, 1, "", "FileValidator"], [117, 1, 1, "", "OutputValidator"], [118, 1, 1, "", "SuccessValidator"], [119, 1, 1, "", "Validator"]], "maize.utilities.validation.FailValidator": [[115, 2, 1, "", "__init__"]], "maize.utilities.validation.FileValidator": [[116, 2, 1, "", "__init__"]], "maize.utilities.validation.OutputValidator": [[117, 2, 1, "", "__init__"]], "maize.utilities.validation.SuccessValidator": [[118, 2, 1, "", "__init__"]], "maize.utilities.validation.Validator": [[119, 2, 1, "", "__init__"]], "maize.utilities.visual": [[121, 6, 1, "", "nested_graphviz"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:exception", "5": "py:attribute", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "exception", "Python exception"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "function", "Python function"]}, "titleterms": {"core": [0, 128], "channel": [1, 2], "channelempti": 3, "channelexcept": 4, "channelful": 5, "datachannel": 6, "filechannel": 7, "compon": [8, 9], "graph": [10, 11, 123], "graphbuildexcept": 12, "interfac": [13, 16, 123], "fileparamet": 14, "input": [15, 131], "multiinput": 17, "multioutput": 18, "multiparamet": 19, "multiport": 20, "output": [21, 131], "paramet": [22, 133], "parameterexcept": 23, "port": 24, "portexcept": 25, "portinterrupt": 26, "suffix": 27, "node": [28, 30, 123, 133], "loopednod": 29, "nodebuildexcept": 31, "runtim": 32, "run": [32, 123, 133], "customformat": 33, "logger": 34, "nodeexcept": 35, "runpool": 36, "runnabl": 37, "statu": 38, "statushandl": 39, "statusupd": 40, "format_summari": 41, "format_upd": 42, "init_sign": 43, "setup_build_log": 44, "setup_node_log": 45, "workflow": [46, 49, 122, 123, 133], "checkpointexcept": 47, "parsingexcept": 48, "expos": 50, "util": [51, 91], "execut": [52, 133], "commandrunn": 53, "commandrunnerpsij": 54, "jobresourceconfig": 55, "processerror": 56, "resourcemanagerconfig": 57, "check_execut": 58, "check_returncod": 59, "run_single_process": 60, "io": 61, "config": 62, "nodeconfig": 63, "nodeconfigdict": 64, "common_par": 65, "create_default_pars": 66, "expand_shell_var": 67, "get_plugin": 68, "load_fil": 69, "parse_group": 70, "read_input": 71, "remove_dir_cont": 72, "sendtre": 73, "setup_workflow": 74, "with_field": 75, "with_kei": 76, "write_input": 77, "macro": 78, "function_to_nod": 79, "lambda_nod": 80, "node_to_funct": 81, "parallel": [82, 133], "resourc": [83, 85, 133], "chunkedsemaphor": 84, "cpu_count": 86, "gpu_count": 87, "test": [88, 124], "mockchannel": 89, "testrig": 90, "strenum": 92, "timer": 93, "change_environ": 94, "chunk": 95, "extract_attribute_doc": 96, "extract_parent_typ": 97, "extract_typ": 98, "find_probable_files_from_command": 99, "graph_cycl": 100, "graph_to_nx": 101, "has_fil": 102, "has_module_system": 103, "is_path_typ": 104, "load_modul": 105, "make_list": 106, "match_context": 107, "matching_typ": 108, "nested_dict_to_tupl": 109, "set_environ": 110, "tuple_to_nested_dict": 111, "typecheck": 112, "unique_id": 113, "valid": [114, 119], "failvalid": 115, "filevalid": 116, "outputvalid": 117, "successvalid": 118, "visual": 120, "nested_graphviz": 121, "cookbook": 122, "simpl": [122, 125], "linear": 122, "cyclic": 122, "condition": 122, "branch": 122, "pass": 122, "result": 122, "back": 122, "python": 122, "load": 122, "balanc": 122, "script": 122, "ultra": 122, "high": 122, "throughput": 122, "design": 123, "develop": 124, "instal": [124, 127, 134], "code": 124, "style": 124, "document": 124, "new": 124, "version": 124, "exampl": 125, "dag": 125, "dcg": 125, "glossari": 126, "quickstart": 127, "manual": 127, "refer": 128, "roadmap": 129, "step": 130, "plumb": 132, "user": 133, "guid": 133, "ad": 133, "set": 133, "handl": 133, "extern": 133, "softwar": 133, "connect": 133, "altern": 133, "definit": 133, "configur": 133, "subgraph": 133, "custom": 133, "file": 133, "loop": 133, "gener": 133, "command": 133, "depend": 133, "job": 133, "submiss": 133, "manag": 133, "advanc": 133, "option": 133, "maiz": 134, "teaser": 134, "indic": 134, "tabl": 134}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"core": [[0, "module-maize.core"]], "Core": [[0, "id1"], [128, "core"]], "channels": [[1, "module-maize.core.channels"]], "Channels": [[1, "id1"]], "Channel": [[2, "channel"]], "ChannelEmpty": [[3, "channelempty"]], "ChannelException": [[4, "channelexception"]], "ChannelFull": [[5, "channelfull"]], "DataChannel": [[6, "datachannel"]], "FileChannel": [[7, "filechannel"]], "component": [[8, "module-maize.core.component"]], "Component": [[8, "id1"], [9, "component"]], "graph": [[10, "module-maize.core.graph"]], "Graph": [[10, "id1"], [11, "graph"]], "GraphBuildException": [[12, "graphbuildexception"]], "interface": [[13, "module-maize.core.interface"]], "Interface": [[13, "id1"], [16, "interface"]], "FileParameter": [[14, "fileparameter"]], "Input": [[15, "input"]], "MultiInput": [[17, "multiinput"]], "MultiOutput": [[18, "multioutput"]], "MultiParameter": [[19, "multiparameter"]], "MultiPort": [[20, "multiport"]], "Output": [[21, "output"]], "Parameter": [[22, "parameter"]], "ParameterException": [[23, "parameterexception"]], "Port": [[24, "port"]], "PortException": [[25, "portexception"]], "PortInterrupt": [[26, "portinterrupt"]], "Suffix": [[27, "suffix"]], "node": [[28, "module-maize.core.node"]], "Node": [[28, "id1"], [30, "node"], [123, "node"]], "LoopedNode": [[29, "loopednode"]], "NodeBuildException": [[31, "nodebuildexception"]], "runtime": [[32, "module-maize.core.runtime"]], "Run": [[32, "run"]], "CustomFormat": [[33, "customformat"]], "Logger": [[34, "logger"]], "NodeException": [[35, "nodeexception"]], "RunPool": [[36, "runpool"]], "Runnable": [[37, "runnable"]], "Status": [[38, "status"]], "StatusHandler": [[39, "statushandler"]], "StatusUpdate": [[40, "statusupdate"]], "format_summaries": [[41, "format-summaries"]], "format_update": [[42, "format-update"]], "init_signal": [[43, "init-signal"]], "setup_build_logging": [[44, "setup-build-logging"]], "setup_node_logging": [[45, "setup-node-logging"]], "workflow": [[46, "module-maize.core.workflow"]], "Workflow": [[46, "id1"], [49, "workflow"], [123, "workflow"]], "CheckpointException": [[47, "checkpointexception"]], "ParsingException": [[48, "parsingexception"]], "expose": [[50, "expose"]], "utilities": [[51, "module-maize.utilities"], [91, "module-maize.utilities.utilities"]], "Utilities": [[51, "id1"]], "execution": [[52, "module-maize.utilities.execution"]], "CommandRunner": [[53, "commandrunner"]], "CommandRunnerPSIJ": [[54, "commandrunnerpsij"]], "JobResourceConfig": [[55, "jobresourceconfig"]], "ProcessError": [[56, "processerror"]], "ResourceManagerConfig": [[57, "resourcemanagerconfig"]], "check_executable": [[58, "check-executable"]], "check_returncode": [[59, "check-returncode"]], "run_single_process": [[60, "run-single-process"]], "io": [[61, "module-maize.utilities.io"]], "Config": [[62, "config"]], "NodeConfig": [[63, "nodeconfig"]], "NodeConfigDict": [[64, "nodeconfigdict"]], "common_parent": [[65, "common-parent"]], "create_default_parser": [[66, "create-default-parser"]], "expand_shell_vars": [[67, "expand-shell-vars"]], "get_plugins": [[68, "get-plugins"]], "load_file": [[69, "load-file"]], "parse_groups": [[70, "parse-groups"]], "read_input": [[71, "read-input"]], "remove_dir_contents": [[72, "remove-dir-contents"]], "sendtree": [[73, "sendtree"]], "setup_workflow": [[74, "setup-workflow"]], "with_fields": [[75, "with-fields"]], "with_keys": [[76, "with-keys"]], "write_input": [[77, "write-input"]], "macros": [[78, "module-maize.utilities.macros"]], "function_to_node": [[79, "function-to-node"]], "lambda_node": [[80, "lambda-node"]], "node_to_function": [[81, "node-to-function"]], "parallel": [[82, "parallel"]], "resources": [[83, "module-maize.utilities.resources"]], "ChunkedSemaphore": [[84, "chunkedsemaphore"]], "Resources": [[85, "resources"]], "cpu_count": [[86, "cpu-count"]], "gpu_count": [[87, "gpu-count"]], "testing": [[88, "module-maize.utilities.testing"]], "MockChannel": [[89, "mockchannel"]], "TestRig": [[90, "testrig"]], "StrEnum": [[92, "strenum"]], "Timer": [[93, "timer"]], "change_environment": [[94, "change-environment"]], "chunks": [[95, "chunks"]], "extract_attribute_docs": [[96, "extract-attribute-docs"]], "extract_parent_type": [[97, "extract-parent-type"]], "extract_type": [[98, "extract-type"]], "find_probable_files_from_command": [[99, "find-probable-files-from-command"]], "graph_cycles": [[100, "graph-cycles"]], "graph_to_nx": [[101, "graph-to-nx"]], "has_file": [[102, "has-file"]], "has_module_system": [[103, "has-module-system"]], "is_path_type": [[104, "is-path-type"]], "load_modules": [[105, "load-modules"]], "make_list": [[106, "make-list"]], "match_context": [[107, "match-context"]], "matching_types": [[108, "matching-types"]], "nested_dict_to_tuple": [[109, "nested-dict-to-tuple"]], "set_environment": [[110, "set-environment"]], "tuple_to_nested_dict": [[111, "tuple-to-nested-dict"]], "typecheck": [[112, "typecheck"]], "unique_id": [[113, "unique-id"]], "validation": [[114, "module-maize.utilities.validation"]], "FailValidator": [[115, "failvalidator"]], "FileValidator": [[116, "filevalidator"]], "OutputValidator": [[117, "outputvalidator"]], "SuccessValidator": [[118, "successvalidator"]], "Validator": [[119, "validator"]], "visual": [[120, "module-maize.utilities.visual"]], "nested_graphviz": [[121, "nested-graphviz"]], "Cookbook": [[122, "cookbook"]], "Simple linear workflow": [[122, "simple-linear-workflow"]], "Cyclic workflow": [[122, "cyclic-workflow"]], "Conditionally branched workflow": [[122, "conditionally-branched-workflow"]], "Pass a result back to python": [[122, "pass-a-result-back-to-python"]], "Workflow with load balancing": [[122, "workflow-with-load-balancing"]], "Workflow as a script": [[122, "workflow-as-a-script"]], "Workflow with ultra-high throughput": [[122, "workflow-with-ultra-high-throughput"]], "Design": [[123, "design"]], "Nodes and Graphs": [[123, "nodes-and-graphs"]], "Workflows": [[123, "workflows"], [133, "workflows"]], "Interfaces": [[123, "interfaces"]], "Running": [[123, "running"]], "Development": [[124, "development"]], "Installation": [[124, "installation"], [127, "installation"], [134, "installation"]], "Code style": [[124, "code-style"]], "Documentation": [[124, "documentation"]], "Testing": [[124, "testing"]], "New versions": [[124, "new-versions"]], "Examples": [[125, "examples"]], "Simple DAG": [[125, "simple-dag"]], "Simple DCG": [[125, "simple-dcg"]], "Glossary": [[126, "glossary"]], "Quickstart": [[127, "quickstart"]], "Manual install": [[127, "manual-install"]], "Reference": [[128, "reference"]], "Roadmap": [[129, "roadmap"]], "Steps": [[130, "steps"], [130, null]], "Input / Output": [[131, "input-output"]], "Plumbing": [[132, "plumbing"]], "User guide": [[133, "user-guide"]], "Adding nodes": [[133, "adding-nodes"]], "Setting parameters": [[133, "setting-parameters"]], "Handling external software": [[133, "handling-external-software"]], "Connecting nodes": [[133, "connecting-nodes"]], "Handling parameters": [[133, "handling-parameters"]], "Alternative workflow definitions": [[133, "alternative-workflow-definitions"]], "Running workflows": [[133, "id1"]], "Configuring workflows": [[133, "configuring-workflows"]], "Subgraphs": [[133, "subgraphs"]], "Custom nodes": [[133, "custom-nodes"]], "Handling files": [[133, "handling-files"]], "Looped execution": [[133, "looped-execution"]], "Generic nodes": [[133, "generic-nodes"]], "Running commands": [[133, "running-commands"]], "Software dependencies": [[133, "software-dependencies"]], "Running in parallel": [[133, "running-in-parallel"]], "Job submission": [[133, "job-submission"]], "Resource management": [[133, "resource-management"]], "Advanced options": [[133, "advanced-options"]], "maize": [[134, "maize"]], "Teaser": [[134, "teaser"]], "Indices and tables": [[134, "indices-and-tables"]]}, "indexentries": {"maize.core": [[0, "module-maize.core"]], "module": [[0, "module-maize.core"], [1, "module-maize.core.channels"], [8, "module-maize.core.component"], [10, "module-maize.core.graph"], [13, "module-maize.core.interface"], [28, "module-maize.core.node"], [32, "module-maize.core.runtime"], [46, "module-maize.core.workflow"], [51, "module-maize.utilities"], [52, "module-maize.utilities.execution"], [61, "module-maize.utilities.io"], [78, "module-maize.utilities.macros"], [83, "module-maize.utilities.resources"], [88, "module-maize.utilities.testing"], [91, "module-maize.utilities.utilities"], [114, "module-maize.utilities.validation"], [120, "module-maize.utilities.visual"]], "maize.core.channels": [[1, "module-maize.core.channels"]], "channel (class in maize.core.channels)": [[2, "maize.core.channels.Channel"]], "__init__() (maize.core.channels.channel method)": [[2, "maize.core.channels.Channel.__init__"]], "active (maize.core.channels.channel property)": [[2, "maize.core.channels.Channel.active"]], "close() (maize.core.channels.channel method)": [[2, "maize.core.channels.Channel.close"]], "flush() (maize.core.channels.channel method)": [[2, "maize.core.channels.Channel.flush"]], "kill() (maize.core.channels.channel method)": [[2, "maize.core.channels.Channel.kill"]], "ready (maize.core.channels.channel property)": [[2, "maize.core.channels.Channel.ready"]], "receive() (maize.core.channels.channel method)": [[2, "maize.core.channels.Channel.receive"]], "send() (maize.core.channels.channel method)": [[2, "maize.core.channels.Channel.send"]], "size (maize.core.channels.channel property)": [[2, "maize.core.channels.Channel.size"]], "channelempty": [[3, "maize.core.channels.ChannelEmpty"]], "channelexception": [[4, "maize.core.channels.ChannelException"]], "channelfull": [[5, "maize.core.channels.ChannelFull"]], "datachannel (class in maize.core.channels)": [[6, "maize.core.channels.DataChannel"]], "__init__() (maize.core.channels.datachannel method)": [[6, "maize.core.channels.DataChannel.__init__"]], "active (maize.core.channels.datachannel property)": [[6, "maize.core.channels.DataChannel.active"]], "close() (maize.core.channels.datachannel method)": [[6, "maize.core.channels.DataChannel.close"]], "flush() (maize.core.channels.datachannel method)": [[6, "maize.core.channels.DataChannel.flush"]], "kill() (maize.core.channels.datachannel method)": [[6, "maize.core.channels.DataChannel.kill"]], "preload() (maize.core.channels.datachannel method)": [[6, "maize.core.channels.DataChannel.preload"]], "ready (maize.core.channels.datachannel property)": [[6, "maize.core.channels.DataChannel.ready"]], "receive() (maize.core.channels.datachannel method)": [[6, "maize.core.channels.DataChannel.receive"]], "send() (maize.core.channels.datachannel method)": [[6, "maize.core.channels.DataChannel.send"]], "size (maize.core.channels.datachannel property)": [[6, "maize.core.channels.DataChannel.size"]], "filechannel (class in maize.core.channels)": [[7, "maize.core.channels.FileChannel"]], "__init__() (maize.core.channels.filechannel method)": [[7, "maize.core.channels.FileChannel.__init__"]], "active (maize.core.channels.filechannel property)": [[7, "maize.core.channels.FileChannel.active"]], "close() (maize.core.channels.filechannel method)": [[7, "maize.core.channels.FileChannel.close"]], "flush() (maize.core.channels.filechannel method)": [[7, "maize.core.channels.FileChannel.flush"]], "kill() (maize.core.channels.filechannel method)": [[7, "maize.core.channels.FileChannel.kill"]], "preload() (maize.core.channels.filechannel method)": [[7, "maize.core.channels.FileChannel.preload"]], "ready (maize.core.channels.filechannel property)": [[7, "maize.core.channels.FileChannel.ready"]], "receive() (maize.core.channels.filechannel method)": [[7, "maize.core.channels.FileChannel.receive"]], "send() (maize.core.channels.filechannel method)": [[7, "maize.core.channels.FileChannel.send"]], "setup() (maize.core.channels.filechannel method)": [[7, "maize.core.channels.FileChannel.setup"]], "size (maize.core.channels.filechannel property)": [[7, "maize.core.channels.FileChannel.size"]], "maize.core.component": [[8, "module-maize.core.component"]], "component (class in maize.core.component)": [[9, "maize.core.component.Component"]], "__init__() (maize.core.component.component method)": [[9, "maize.core.component.Component.__init__"]], "all_parameters (maize.core.component.component property)": [[9, "maize.core.component.Component.all_parameters"]], "as_dict() (maize.core.component.component method)": [[9, "maize.core.component.Component.as_dict"]], "component_path (maize.core.component.component property)": [[9, "maize.core.component.Component.component_path"]], "datatype (maize.core.component.component attribute)": [[9, "maize.core.component.Component.datatype"]], "full_timer (maize.core.component.component attribute)": [[9, "maize.core.component.Component.full_timer"]], "get_available_nodes() (maize.core.component.component static method)": [[9, "maize.core.component.Component.get_available_nodes"]], "get_inputs() (maize.core.component.component class method)": [[9, "maize.core.component.Component.get_inputs"]], "get_interfaces() (maize.core.component.component class method)": [[9, "maize.core.component.Component.get_interfaces"]], "get_node_class() (maize.core.component.component static method)": [[9, "maize.core.component.Component.get_node_class"]], "get_outputs() (maize.core.component.component class method)": [[9, "maize.core.component.Component.get_outputs"]], "get_parameters() (maize.core.component.component class method)": [[9, "maize.core.component.Component.get_parameters"]], "get_summary_line() (maize.core.component.component class method)": [[9, "maize.core.component.Component.get_summary_line"]], "logger (maize.core.component.component attribute)": [[9, "maize.core.component.Component.logger"]], "n_inbound (maize.core.component.component property)": [[9, "maize.core.component.Component.n_inbound"]], "n_outbound (maize.core.component.component property)": [[9, "maize.core.component.Component.n_outbound"]], "node_config (maize.core.component.component property)": [[9, "maize.core.component.Component.node_config"]], "parents (maize.core.component.component property)": [[9, "maize.core.component.Component.parents"]], "ports (maize.core.component.component property)": [[9, "maize.core.component.Component.ports"]], "ports_active() (maize.core.component.component method)": [[9, "maize.core.component.Component.ports_active"]], "required_callables (maize.core.component.component attribute)": [[9, "maize.core.component.Component.required_callables"]], "required_packages (maize.core.component.component attribute)": [[9, "maize.core.component.Component.required_packages"]], "root (maize.core.component.component property)": [[9, "maize.core.component.Component.root"]], "run_timer (maize.core.component.component attribute)": [[9, "maize.core.component.Component.run_timer"]], "send_update() (maize.core.component.component method)": [[9, "maize.core.component.Component.send_update"]], "serialized_summary() (maize.core.component.component class method)": [[9, "maize.core.component.Component.serialized_summary"]], "setup_directories() (maize.core.component.component method)": [[9, "maize.core.component.Component.setup_directories"]], "status (maize.core.component.component attribute)": [[9, "maize.core.component.Component.status"]], "update_parameters() (maize.core.component.component method)": [[9, "maize.core.component.Component.update_parameters"]], "work_dir (maize.core.component.component attribute)": [[9, "maize.core.component.Component.work_dir"]], "maize.core.graph": [[10, "module-maize.core.graph"]], "graph (class in maize.core.graph)": [[11, "maize.core.graph.Graph"]], "__init__() (maize.core.graph.graph method)": [[11, "maize.core.graph.Graph.__init__"]], "active_nodes (maize.core.graph.graph property)": [[11, "maize.core.graph.Graph.active_nodes"]], "add() (maize.core.graph.graph method)": [[11, "maize.core.graph.Graph.add"]], "add_all() (maize.core.graph.graph method)": [[11, "maize.core.graph.Graph.add_all"]], "all_parameters (maize.core.graph.graph property)": [[11, "maize.core.graph.Graph.all_parameters"]], "as_dict() (maize.core.graph.graph method)": [[11, "maize.core.graph.Graph.as_dict"]], "auto_connect() (maize.core.graph.graph method)": [[11, "maize.core.graph.Graph.auto_connect"]], "build() (maize.core.graph.graph method)": [[11, "maize.core.graph.Graph.build"]], "chain() (maize.core.graph.graph method)": [[11, "maize.core.graph.Graph.chain"]], "channels (maize.core.graph.graph attribute)": [[11, "maize.core.graph.Graph.channels"]], "check() (maize.core.graph.graph method)": [[11, "maize.core.graph.Graph.check"]], "check_dependencies() (maize.core.graph.graph method)": [[11, "maize.core.graph.Graph.check_dependencies"]], "combine_parameters() (maize.core.graph.graph method)": [[11, "maize.core.graph.Graph.combine_parameters"]], "component_path (maize.core.graph.graph property)": [[11, "maize.core.graph.Graph.component_path"]], "connect() (maize.core.graph.graph method)": [[11, "maize.core.graph.Graph.connect"]], "connect_all() (maize.core.graph.graph method)": [[11, "maize.core.graph.Graph.connect_all"]], "datatype (maize.core.graph.graph attribute)": [[11, "maize.core.graph.Graph.datatype"]], "flat_channels (maize.core.graph.graph property)": [[11, "maize.core.graph.Graph.flat_channels"]], "flat_components (maize.core.graph.graph property)": [[11, "maize.core.graph.Graph.flat_components"]], "flat_nodes (maize.core.graph.graph property)": [[11, "maize.core.graph.Graph.flat_nodes"]], "full_timer (maize.core.graph.graph attribute)": [[11, "maize.core.graph.Graph.full_timer"]], "get_available_nodes() (maize.core.graph.graph static method)": [[11, "maize.core.graph.Graph.get_available_nodes"]], "get_inputs() (maize.core.graph.graph class method)": [[11, "maize.core.graph.Graph.get_inputs"]], "get_interfaces() (maize.core.graph.graph class method)": [[11, "maize.core.graph.Graph.get_interfaces"]], "get_node() (maize.core.graph.graph method)": [[11, "maize.core.graph.Graph.get_node"]], "get_node_class() (maize.core.graph.graph static method)": [[11, "maize.core.graph.Graph.get_node_class"]], "get_outputs() (maize.core.graph.graph class method)": [[11, "maize.core.graph.Graph.get_outputs"]], "get_parameter() (maize.core.graph.graph method)": [[11, "maize.core.graph.Graph.get_parameter"]], "get_parameters() (maize.core.graph.graph class method)": [[11, "maize.core.graph.Graph.get_parameters"]], "get_port() (maize.core.graph.graph method)": [[11, "maize.core.graph.Graph.get_port"]], "get_summary_line() (maize.core.graph.graph class method)": [[11, "maize.core.graph.Graph.get_summary_line"]], "logger (maize.core.graph.graph attribute)": [[11, "maize.core.graph.Graph.logger"]], "map() (maize.core.graph.graph method)": [[11, "maize.core.graph.Graph.map"]], "map_port() (maize.core.graph.graph method)": [[11, "maize.core.graph.Graph.map_port"]], "n_inbound (maize.core.graph.graph property)": [[11, "maize.core.graph.Graph.n_inbound"]], "n_outbound (maize.core.graph.graph property)": [[11, "maize.core.graph.Graph.n_outbound"]], "node_config (maize.core.graph.graph property)": [[11, "maize.core.graph.Graph.node_config"]], "nodes (maize.core.graph.graph attribute)": [[11, "maize.core.graph.Graph.nodes"]], "parents (maize.core.graph.graph property)": [[11, "maize.core.graph.Graph.parents"]], "ports (maize.core.graph.graph property)": [[11, "maize.core.graph.Graph.ports"]], "ports_active() (maize.core.graph.graph method)": [[11, "maize.core.graph.Graph.ports_active"]], "required_callables (maize.core.graph.graph attribute)": [[11, "maize.core.graph.Graph.required_callables"]], "required_packages (maize.core.graph.graph attribute)": [[11, "maize.core.graph.Graph.required_packages"]], "root (maize.core.graph.graph property)": [[11, "maize.core.graph.Graph.root"]], "run_timer (maize.core.graph.graph attribute)": [[11, "maize.core.graph.Graph.run_timer"]], "send_update() (maize.core.graph.graph method)": [[11, "maize.core.graph.Graph.send_update"]], "serialized_summary() (maize.core.graph.graph class method)": [[11, "maize.core.graph.Graph.serialized_summary"]], "setup_directories() (maize.core.graph.graph method)": [[11, "maize.core.graph.Graph.setup_directories"]], "status (maize.core.graph.graph attribute)": [[11, "maize.core.graph.Graph.status"]], "update_parameters() (maize.core.graph.graph method)": [[11, "maize.core.graph.Graph.update_parameters"]], "visualize() (maize.core.graph.graph method)": [[11, "maize.core.graph.Graph.visualize"]], "work_dir (maize.core.graph.graph attribute)": [[11, "maize.core.graph.Graph.work_dir"]], "graphbuildexception": [[12, "maize.core.graph.GraphBuildException"]], "maize.core.interface": [[13, "module-maize.core.interface"]], "fileparameter (class in maize.core.interface)": [[14, "maize.core.interface.FileParameter"]], "__init__() (maize.core.interface.fileparameter method)": [[14, "maize.core.interface.FileParameter.__init__"]], "build() (maize.core.interface.fileparameter method)": [[14, "maize.core.interface.FileParameter.build"]], "changed (maize.core.interface.fileparameter property)": [[14, "maize.core.interface.FileParameter.changed"]], "check() (maize.core.interface.fileparameter method)": [[14, "maize.core.interface.FileParameter.check"]], "filepath (maize.core.interface.fileparameter property)": [[14, "maize.core.interface.FileParameter.filepath"]], "is_default (maize.core.interface.fileparameter property)": [[14, "maize.core.interface.FileParameter.is_default"]], "is_set (maize.core.interface.fileparameter property)": [[14, "maize.core.interface.FileParameter.is_set"]], "path (maize.core.interface.fileparameter property)": [[14, "maize.core.interface.FileParameter.path"]], "serialized (maize.core.interface.fileparameter property)": [[14, "maize.core.interface.FileParameter.serialized"]], "set() (maize.core.interface.fileparameter method)": [[14, "maize.core.interface.FileParameter.set"]], "value (maize.core.interface.fileparameter property)": [[14, "maize.core.interface.FileParameter.value"]], "input (class in maize.core.interface)": [[15, "maize.core.interface.Input"]], "__init__() (maize.core.interface.input method)": [[15, "maize.core.interface.Input.__init__"]], "active (maize.core.interface.input property)": [[15, "maize.core.interface.Input.active"]], "build() (maize.core.interface.input method)": [[15, "maize.core.interface.Input.build"]], "changed (maize.core.interface.input property)": [[15, "maize.core.interface.Input.changed"]], "check() (maize.core.interface.input method)": [[15, "maize.core.interface.Input.check"]], "close() (maize.core.interface.input method)": [[15, "maize.core.interface.Input.close"]], "connected (maize.core.interface.input property)": [[15, "maize.core.interface.Input.connected"]], "dump() (maize.core.interface.input method)": [[15, "maize.core.interface.Input.dump"]], "is_connected() (maize.core.interface.input static method)": [[15, "maize.core.interface.Input.is_connected"]], "is_default (maize.core.interface.input property)": [[15, "maize.core.interface.Input.is_default"]], "is_set (maize.core.interface.input property)": [[15, "maize.core.interface.Input.is_set"]], "name (maize.core.interface.input attribute)": [[15, "maize.core.interface.Input.name"]], "parent (maize.core.interface.input attribute)": [[15, "maize.core.interface.Input.parent"]], "path (maize.core.interface.input property)": [[15, "maize.core.interface.Input.path"]], "preload() (maize.core.interface.input method)": [[15, "maize.core.interface.Input.preload"]], "ready() (maize.core.interface.input method)": [[15, "maize.core.interface.Input.ready"]], "receive() (maize.core.interface.input method)": [[15, "maize.core.interface.Input.receive"]], "receive_optional() (maize.core.interface.input method)": [[15, "maize.core.interface.Input.receive_optional"]], "serialized (maize.core.interface.input property)": [[15, "maize.core.interface.Input.serialized"]], "set() (maize.core.interface.input method)": [[15, "maize.core.interface.Input.set"]], "set_channel() (maize.core.interface.input method)": [[15, "maize.core.interface.Input.set_channel"]], "size (maize.core.interface.input property)": [[15, "maize.core.interface.Input.size"]], "value (maize.core.interface.input property)": [[15, "maize.core.interface.Input.value"]], "interface (class in maize.core.interface)": [[16, "maize.core.interface.Interface"]], "__init__() (maize.core.interface.interface method)": [[16, "maize.core.interface.Interface.__init__"]], "build() (maize.core.interface.interface method)": [[16, "maize.core.interface.Interface.build"]], "check() (maize.core.interface.interface method)": [[16, "maize.core.interface.Interface.check"]], "datatype (maize.core.interface.interface attribute)": [[16, "maize.core.interface.Interface.datatype"]], "name (maize.core.interface.interface attribute)": [[16, "maize.core.interface.Interface.name"]], "parent (maize.core.interface.interface attribute)": [[16, "maize.core.interface.Interface.parent"]], "path (maize.core.interface.interface property)": [[16, "maize.core.interface.Interface.path"]], "serialized (maize.core.interface.interface property)": [[16, "maize.core.interface.Interface.serialized"]], "multiinput (class in maize.core.interface)": [[17, "maize.core.interface.MultiInput"]], "__init__() (maize.core.interface.multiinput method)": [[17, "maize.core.interface.MultiInput.__init__"]], "active (maize.core.interface.multiinput property)": [[17, "maize.core.interface.MultiInput.active"]], "build() (maize.core.interface.multiinput method)": [[17, "maize.core.interface.MultiInput.build"]], "check() (maize.core.interface.multiinput method)": [[17, "maize.core.interface.MultiInput.check"]], "close() (maize.core.interface.multiinput method)": [[17, "maize.core.interface.MultiInput.close"]], "connected (maize.core.interface.multiinput property)": [[17, "maize.core.interface.MultiInput.connected"]], "default (maize.core.interface.multiinput property)": [[17, "maize.core.interface.MultiInput.default"]], "dump() (maize.core.interface.multiinput method)": [[17, "maize.core.interface.MultiInput.dump"]], "is_connected() (maize.core.interface.multiinput static method)": [[17, "maize.core.interface.MultiInput.is_connected"]], "name (maize.core.interface.multiinput attribute)": [[17, "maize.core.interface.MultiInput.name"]], "parent (maize.core.interface.multiinput attribute)": [[17, "maize.core.interface.MultiInput.parent"]], "path (maize.core.interface.multiinput property)": [[17, "maize.core.interface.MultiInput.path"]], "preload() (maize.core.interface.multiinput method)": [[17, "maize.core.interface.MultiInput.preload"]], "serialized (maize.core.interface.multiinput property)": [[17, "maize.core.interface.MultiInput.serialized"]], "set() (maize.core.interface.multiinput method)": [[17, "maize.core.interface.MultiInput.set"]], "set_channel() (maize.core.interface.multiinput method)": [[17, "maize.core.interface.MultiInput.set_channel"]], "size (maize.core.interface.multiinput property)": [[17, "maize.core.interface.MultiInput.size"]], "multioutput (class in maize.core.interface)": [[18, "maize.core.interface.MultiOutput"]], "__init__() (maize.core.interface.multioutput method)": [[18, "maize.core.interface.MultiOutput.__init__"]], "active (maize.core.interface.multioutput property)": [[18, "maize.core.interface.MultiOutput.active"]], "build() (maize.core.interface.multioutput method)": [[18, "maize.core.interface.MultiOutput.build"]], "check() (maize.core.interface.multioutput method)": [[18, "maize.core.interface.MultiOutput.check"]], "close() (maize.core.interface.multioutput method)": [[18, "maize.core.interface.MultiOutput.close"]], "connected (maize.core.interface.multioutput property)": [[18, "maize.core.interface.MultiOutput.connected"]], "is_connected() (maize.core.interface.multioutput static method)": [[18, "maize.core.interface.MultiOutput.is_connected"]], "name (maize.core.interface.multioutput attribute)": [[18, "maize.core.interface.MultiOutput.name"]], "parent (maize.core.interface.multioutput attribute)": [[18, "maize.core.interface.MultiOutput.parent"]], "path (maize.core.interface.multioutput property)": [[18, "maize.core.interface.MultiOutput.path"]], "serialized (maize.core.interface.multioutput property)": [[18, "maize.core.interface.MultiOutput.serialized"]], "set_channel() (maize.core.interface.multioutput method)": [[18, "maize.core.interface.MultiOutput.set_channel"]], "size (maize.core.interface.multioutput property)": [[18, "maize.core.interface.MultiOutput.size"]], "multiparameter (class in maize.core.interface)": [[19, "maize.core.interface.MultiParameter"]], "__init__() (maize.core.interface.multiparameter method)": [[19, "maize.core.interface.MultiParameter.__init__"]], "as_dict() (maize.core.interface.multiparameter method)": [[19, "maize.core.interface.MultiParameter.as_dict"]], "build() (maize.core.interface.multiparameter method)": [[19, "maize.core.interface.MultiParameter.build"]], "changed (maize.core.interface.multiparameter property)": [[19, "maize.core.interface.MultiParameter.changed"]], "check() (maize.core.interface.multiparameter method)": [[19, "maize.core.interface.MultiParameter.check"]], "is_default (maize.core.interface.multiparameter property)": [[19, "maize.core.interface.MultiParameter.is_default"]], "is_set (maize.core.interface.multiparameter property)": [[19, "maize.core.interface.MultiParameter.is_set"]], "name (maize.core.interface.multiparameter attribute)": [[19, "maize.core.interface.MultiParameter.name"]], "parent (maize.core.interface.multiparameter attribute)": [[19, "maize.core.interface.MultiParameter.parent"]], "parents (maize.core.interface.multiparameter property)": [[19, "maize.core.interface.MultiParameter.parents"]], "path (maize.core.interface.multiparameter property)": [[19, "maize.core.interface.MultiParameter.path"]], "serialized (maize.core.interface.multiparameter property)": [[19, "maize.core.interface.MultiParameter.serialized"]], "set() (maize.core.interface.multiparameter method)": [[19, "maize.core.interface.MultiParameter.set"]], "value (maize.core.interface.multiparameter property)": [[19, "maize.core.interface.MultiParameter.value"]], "multiport (class in maize.core.interface)": [[20, "maize.core.interface.MultiPort"]], "__init__() (maize.core.interface.multiport method)": [[20, "maize.core.interface.MultiPort.__init__"]], "active (maize.core.interface.multiport property)": [[20, "maize.core.interface.MultiPort.active"]], "build() (maize.core.interface.multiport method)": [[20, "maize.core.interface.MultiPort.build"]], "check() (maize.core.interface.multiport method)": [[20, "maize.core.interface.MultiPort.check"]], "close() (maize.core.interface.multiport method)": [[20, "maize.core.interface.MultiPort.close"]], "connected (maize.core.interface.multiport property)": [[20, "maize.core.interface.MultiPort.connected"]], "is_connected() (maize.core.interface.multiport static method)": [[20, "maize.core.interface.MultiPort.is_connected"]], "name (maize.core.interface.multiport attribute)": [[20, "maize.core.interface.MultiPort.name"]], "parent (maize.core.interface.multiport attribute)": [[20, "maize.core.interface.MultiPort.parent"]], "path (maize.core.interface.multiport property)": [[20, "maize.core.interface.MultiPort.path"]], "serialized (maize.core.interface.multiport property)": [[20, "maize.core.interface.MultiPort.serialized"]], "set_channel() (maize.core.interface.multiport method)": [[20, "maize.core.interface.MultiPort.set_channel"]], "size (maize.core.interface.multiport property)": [[20, "maize.core.interface.MultiPort.size"]], "output (class in maize.core.interface)": [[21, "maize.core.interface.Output"]], "__init__() (maize.core.interface.output method)": [[21, "maize.core.interface.Output.__init__"]], "active (maize.core.interface.output property)": [[21, "maize.core.interface.Output.active"]], "build() (maize.core.interface.output method)": [[21, "maize.core.interface.Output.build"]], "check() (maize.core.interface.output method)": [[21, "maize.core.interface.Output.check"]], "close() (maize.core.interface.output method)": [[21, "maize.core.interface.Output.close"]], "connected (maize.core.interface.output property)": [[21, "maize.core.interface.Output.connected"]], "is_connected() (maize.core.interface.output static method)": [[21, "maize.core.interface.Output.is_connected"]], "name (maize.core.interface.output attribute)": [[21, "maize.core.interface.Output.name"]], "parent (maize.core.interface.output attribute)": [[21, "maize.core.interface.Output.parent"]], "path (maize.core.interface.output property)": [[21, "maize.core.interface.Output.path"]], "send() (maize.core.interface.output method)": [[21, "maize.core.interface.Output.send"]], "serialized (maize.core.interface.output property)": [[21, "maize.core.interface.Output.serialized"]], "set_channel() (maize.core.interface.output method)": [[21, "maize.core.interface.Output.set_channel"]], "size (maize.core.interface.output property)": [[21, "maize.core.interface.Output.size"]], "parameter (class in maize.core.interface)": [[22, "maize.core.interface.Parameter"]], "__init__() (maize.core.interface.parameter method)": [[22, "maize.core.interface.Parameter.__init__"]], "build() (maize.core.interface.parameter method)": [[22, "maize.core.interface.Parameter.build"]], "changed (maize.core.interface.parameter property)": [[22, "maize.core.interface.Parameter.changed"]], "check() (maize.core.interface.parameter method)": [[22, "maize.core.interface.Parameter.check"]], "datatype (maize.core.interface.parameter attribute)": [[22, "maize.core.interface.Parameter.datatype"]], "is_default (maize.core.interface.parameter property)": [[22, "maize.core.interface.Parameter.is_default"]], "is_set (maize.core.interface.parameter property)": [[22, "maize.core.interface.Parameter.is_set"]], "name (maize.core.interface.parameter attribute)": [[22, "maize.core.interface.Parameter.name"]], "parent (maize.core.interface.parameter attribute)": [[22, "maize.core.interface.Parameter.parent"]], "path (maize.core.interface.parameter property)": [[22, "maize.core.interface.Parameter.path"]], "serialized (maize.core.interface.parameter property)": [[22, "maize.core.interface.Parameter.serialized"]], "set() (maize.core.interface.parameter method)": [[22, "maize.core.interface.Parameter.set"]], "value (maize.core.interface.parameter property)": [[22, "maize.core.interface.Parameter.value"]], "parameterexception": [[23, "maize.core.interface.ParameterException"]], "port (class in maize.core.interface)": [[24, "maize.core.interface.Port"]], "__init__() (maize.core.interface.port method)": [[24, "maize.core.interface.Port.__init__"]], "active (maize.core.interface.port property)": [[24, "maize.core.interface.Port.active"]], "build() (maize.core.interface.port method)": [[24, "maize.core.interface.Port.build"]], "check() (maize.core.interface.port method)": [[24, "maize.core.interface.Port.check"]], "close() (maize.core.interface.port method)": [[24, "maize.core.interface.Port.close"]], "connected (maize.core.interface.port property)": [[24, "maize.core.interface.Port.connected"]], "is_connected() (maize.core.interface.port static method)": [[24, "maize.core.interface.Port.is_connected"]], "name (maize.core.interface.port attribute)": [[24, "maize.core.interface.Port.name"]], "parent (maize.core.interface.port attribute)": [[24, "maize.core.interface.Port.parent"]], "path (maize.core.interface.port property)": [[24, "maize.core.interface.Port.path"]], "serialized (maize.core.interface.port property)": [[24, "maize.core.interface.Port.serialized"]], "set_channel() (maize.core.interface.port method)": [[24, "maize.core.interface.Port.set_channel"]], "size (maize.core.interface.port property)": [[24, "maize.core.interface.Port.size"]], "portexception": [[25, "maize.core.interface.PortException"]], "portinterrupt": [[26, "maize.core.interface.PortInterrupt"]], "suffix (class in maize.core.interface)": [[27, "maize.core.interface.Suffix"]], "__init__() (maize.core.interface.suffix method)": [[27, "maize.core.interface.Suffix.__init__"]], "maize.core.node": [[28, "module-maize.core.node"]], "loopednode (class in maize.core.node)": [[29, "maize.core.node.LoopedNode"]], "__init__() (maize.core.node.loopednode method)": [[29, "maize.core.node.LoopedNode.__init__"]], "all_parameters (maize.core.node.loopednode property)": [[29, "maize.core.node.LoopedNode.all_parameters"]], "as_dict() (maize.core.node.loopednode method)": [[29, "maize.core.node.LoopedNode.as_dict"]], "batch_options (maize.core.node.loopednode attribute)": [[29, "maize.core.node.LoopedNode.batch_options"]], "build() (maize.core.node.loopednode method)": [[29, "maize.core.node.LoopedNode.build"]], "check() (maize.core.node.loopednode method)": [[29, "maize.core.node.LoopedNode.check"]], "check_dependencies() (maize.core.node.loopednode method)": [[29, "maize.core.node.LoopedNode.check_dependencies"]], "check_parameters() (maize.core.node.loopednode method)": [[29, "maize.core.node.LoopedNode.check_parameters"]], "cleanup() (maize.core.node.loopednode method)": [[29, "maize.core.node.LoopedNode.cleanup"]], "commands (maize.core.node.loopednode attribute)": [[29, "maize.core.node.LoopedNode.commands"]], "component_path (maize.core.node.loopednode property)": [[29, "maize.core.node.LoopedNode.component_path"]], "datatype (maize.core.node.loopednode attribute)": [[29, "maize.core.node.LoopedNode.datatype"]], "execute() (maize.core.node.loopednode method)": [[29, "maize.core.node.LoopedNode.execute"]], "full_timer (maize.core.node.loopednode attribute)": [[29, "maize.core.node.LoopedNode.full_timer"]], "get_available_nodes() (maize.core.node.loopednode static method)": [[29, "maize.core.node.LoopedNode.get_available_nodes"]], "get_inputs() (maize.core.node.loopednode class method)": [[29, "maize.core.node.LoopedNode.get_inputs"]], "get_interfaces() (maize.core.node.loopednode class method)": [[29, "maize.core.node.LoopedNode.get_interfaces"]], "get_node_class() (maize.core.node.loopednode static method)": [[29, "maize.core.node.LoopedNode.get_node_class"]], "get_outputs() (maize.core.node.loopednode class method)": [[29, "maize.core.node.LoopedNode.get_outputs"]], "get_parameters() (maize.core.node.loopednode class method)": [[29, "maize.core.node.LoopedNode.get_parameters"]], "get_summary_line() (maize.core.node.loopednode class method)": [[29, "maize.core.node.LoopedNode.get_summary_line"]], "logger (maize.core.node.loopednode attribute)": [[29, "maize.core.node.LoopedNode.logger"]], "modules (maize.core.node.loopednode attribute)": [[29, "maize.core.node.LoopedNode.modules"]], "n_inbound (maize.core.node.loopednode property)": [[29, "maize.core.node.LoopedNode.n_inbound"]], "n_outbound (maize.core.node.loopednode property)": [[29, "maize.core.node.LoopedNode.n_outbound"]], "node_config (maize.core.node.loopednode property)": [[29, "maize.core.node.LoopedNode.node_config"]], "parents (maize.core.node.loopednode property)": [[29, "maize.core.node.LoopedNode.parents"]], "ports (maize.core.node.loopednode property)": [[29, "maize.core.node.LoopedNode.ports"]], "ports_active() (maize.core.node.loopednode method)": [[29, "maize.core.node.LoopedNode.ports_active"]], "prepare() (maize.core.node.loopednode method)": [[29, "maize.core.node.LoopedNode.prepare"]], "python (maize.core.node.loopednode attribute)": [[29, "maize.core.node.LoopedNode.python"]], "required_callables (maize.core.node.loopednode attribute)": [[29, "maize.core.node.LoopedNode.required_callables"]], "required_packages (maize.core.node.loopednode attribute)": [[29, "maize.core.node.LoopedNode.required_packages"]], "root (maize.core.node.loopednode property)": [[29, "maize.core.node.LoopedNode.root"]], "run() (maize.core.node.loopednode method)": [[29, "maize.core.node.LoopedNode.run"]], "run_command() (maize.core.node.loopednode method)": [[29, "maize.core.node.LoopedNode.run_command"]], "run_multi() (maize.core.node.loopednode method)": [[29, "maize.core.node.LoopedNode.run_multi"]], "run_timer (maize.core.node.loopednode attribute)": [[29, "maize.core.node.LoopedNode.run_timer"]], "scripts (maize.core.node.loopednode attribute)": [[29, "maize.core.node.LoopedNode.scripts"]], "send_update() (maize.core.node.loopednode method)": [[29, "maize.core.node.LoopedNode.send_update"]], "serialized_summary() (maize.core.node.loopednode class method)": [[29, "maize.core.node.LoopedNode.serialized_summary"]], "setup_directories() (maize.core.node.loopednode method)": [[29, "maize.core.node.LoopedNode.setup_directories"]], "shutdown() (maize.core.node.loopednode method)": [[29, "maize.core.node.LoopedNode.shutdown"]], "status (maize.core.node.loopednode attribute)": [[29, "maize.core.node.LoopedNode.status"]], "update_parameters() (maize.core.node.loopednode method)": [[29, "maize.core.node.LoopedNode.update_parameters"]], "work_dir (maize.core.node.loopednode attribute)": [[29, "maize.core.node.LoopedNode.work_dir"]], "node (class in maize.core.node)": [[30, "maize.core.node.Node"]], "__init__() (maize.core.node.node method)": [[30, "maize.core.node.Node.__init__"]], "all_parameters (maize.core.node.node property)": [[30, "maize.core.node.Node.all_parameters"]], "as_dict() (maize.core.node.node method)": [[30, "maize.core.node.Node.as_dict"]], "batch_options (maize.core.node.node attribute)": [[30, "maize.core.node.Node.batch_options"]], "build() (maize.core.node.node method)": [[30, "maize.core.node.Node.build"]], "check() (maize.core.node.node method)": [[30, "maize.core.node.Node.check"]], "check_dependencies() (maize.core.node.node method)": [[30, "maize.core.node.Node.check_dependencies"]], "check_parameters() (maize.core.node.node method)": [[30, "maize.core.node.Node.check_parameters"]], "cleanup() (maize.core.node.node method)": [[30, "maize.core.node.Node.cleanup"]], "commands (maize.core.node.node attribute)": [[30, "maize.core.node.Node.commands"]], "component_path (maize.core.node.node property)": [[30, "maize.core.node.Node.component_path"]], "cpus (maize.core.node.node attribute)": [[30, "maize.core.node.Node.cpus"]], "datatype (maize.core.node.node attribute)": [[30, "maize.core.node.Node.datatype"]], "execute() (maize.core.node.node method)": [[30, "maize.core.node.Node.execute"]], "full_timer (maize.core.node.node attribute)": [[30, "maize.core.node.Node.full_timer"]], "get_available_nodes() (maize.core.node.node static method)": [[30, "maize.core.node.Node.get_available_nodes"]], "get_inputs() (maize.core.node.node class method)": [[30, "maize.core.node.Node.get_inputs"]], "get_interfaces() (maize.core.node.node class method)": [[30, "maize.core.node.Node.get_interfaces"]], "get_node_class() (maize.core.node.node static method)": [[30, "maize.core.node.Node.get_node_class"]], "get_outputs() (maize.core.node.node class method)": [[30, "maize.core.node.Node.get_outputs"]], "get_parameters() (maize.core.node.node class method)": [[30, "maize.core.node.Node.get_parameters"]], "get_summary_line() (maize.core.node.node class method)": [[30, "maize.core.node.Node.get_summary_line"]], "gpus (maize.core.node.node attribute)": [[30, "maize.core.node.Node.gpus"]], "logger (maize.core.node.node attribute)": [[30, "maize.core.node.Node.logger"]], "modules (maize.core.node.node attribute)": [[30, "maize.core.node.Node.modules"]], "n_inbound (maize.core.node.node property)": [[30, "maize.core.node.Node.n_inbound"]], "n_outbound (maize.core.node.node property)": [[30, "maize.core.node.Node.n_outbound"]], "node_config (maize.core.node.node property)": [[30, "maize.core.node.Node.node_config"]], "parents (maize.core.node.node property)": [[30, "maize.core.node.Node.parents"]], "ports (maize.core.node.node property)": [[30, "maize.core.node.Node.ports"]], "ports_active() (maize.core.node.node method)": [[30, "maize.core.node.Node.ports_active"]], "prepare() (maize.core.node.node method)": [[30, "maize.core.node.Node.prepare"]], "python (maize.core.node.node attribute)": [[30, "maize.core.node.Node.python"]], "required_callables (maize.core.node.node attribute)": [[30, "maize.core.node.Node.required_callables"]], "required_packages (maize.core.node.node attribute)": [[30, "maize.core.node.Node.required_packages"]], "root (maize.core.node.node property)": [[30, "maize.core.node.Node.root"]], "run() (maize.core.node.node method)": [[30, "maize.core.node.Node.run"]], "run_command() (maize.core.node.node method)": [[30, "maize.core.node.Node.run_command"]], "run_multi() (maize.core.node.node method)": [[30, "maize.core.node.Node.run_multi"]], "run_timer (maize.core.node.node attribute)": [[30, "maize.core.node.Node.run_timer"]], "scripts (maize.core.node.node attribute)": [[30, "maize.core.node.Node.scripts"]], "send_update() (maize.core.node.node method)": [[30, "maize.core.node.Node.send_update"]], "serialized_summary() (maize.core.node.node class method)": [[30, "maize.core.node.Node.serialized_summary"]], "setup_directories() (maize.core.node.node method)": [[30, "maize.core.node.Node.setup_directories"]], "shutdown() (maize.core.node.node method)": [[30, "maize.core.node.Node.shutdown"]], "status (maize.core.node.node attribute)": [[30, "maize.core.node.Node.status"]], "update_parameters() (maize.core.node.node method)": [[30, "maize.core.node.Node.update_parameters"]], "work_dir (maize.core.node.node attribute)": [[30, "maize.core.node.Node.work_dir"]], "nodebuildexception": [[31, "maize.core.node.NodeBuildException"]], "maize.core.runtime": [[32, "module-maize.core.runtime"]], "customformat (class in maize.core.runtime)": [[33, "maize.core.runtime.CustomFormat"]], "__init__() (maize.core.runtime.customformat method)": [[33, "maize.core.runtime.CustomFormat.__init__"]], "converter() (maize.core.runtime.customformat method)": [[33, "maize.core.runtime.CustomFormat.converter"]], "format() (maize.core.runtime.customformat method)": [[33, "maize.core.runtime.CustomFormat.format"]], "formatexception() (maize.core.runtime.customformat method)": [[33, "maize.core.runtime.CustomFormat.formatException"]], "formatstack() (maize.core.runtime.customformat method)": [[33, "maize.core.runtime.CustomFormat.formatStack"]], "formattime() (maize.core.runtime.customformat method)": [[33, "maize.core.runtime.CustomFormat.formatTime"]], "usestime() (maize.core.runtime.customformat method)": [[33, "maize.core.runtime.CustomFormat.usesTime"]], "logger (class in maize.core.runtime)": [[34, "maize.core.runtime.Logger"]], "__init__() (maize.core.runtime.logger method)": [[34, "maize.core.runtime.Logger.__init__"]], "cleanup() (maize.core.runtime.logger method)": [[34, "maize.core.runtime.Logger.cleanup"]], "execute() (maize.core.runtime.logger method)": [[34, "maize.core.runtime.Logger.execute"]], "nodeexception": [[35, "maize.core.runtime.NodeException"]], "runpool (class in maize.core.runtime)": [[36, "maize.core.runtime.RunPool"]], "__init__() (maize.core.runtime.runpool method)": [[36, "maize.core.runtime.RunPool.__init__"]], "n_processes (maize.core.runtime.runpool property)": [[36, "maize.core.runtime.RunPool.n_processes"]], "runnable (class in maize.core.runtime)": [[37, "maize.core.runtime.Runnable"]], "__init__() (maize.core.runtime.runnable method)": [[37, "maize.core.runtime.Runnable.__init__"]], "cleanup() (maize.core.runtime.runnable method)": [[37, "maize.core.runtime.Runnable.cleanup"]], "execute() (maize.core.runtime.runnable method)": [[37, "maize.core.runtime.Runnable.execute"]], "completed (maize.core.runtime.status attribute)": [[38, "maize.core.runtime.Status.COMPLETED"]], "failed (maize.core.runtime.status attribute)": [[38, "maize.core.runtime.Status.FAILED"]], "not_ready (maize.core.runtime.status attribute)": [[38, "maize.core.runtime.Status.NOT_READY"]], "ready (maize.core.runtime.status attribute)": [[38, "maize.core.runtime.Status.READY"]], "running (maize.core.runtime.status attribute)": [[38, "maize.core.runtime.Status.RUNNING"]], "stopped (maize.core.runtime.status attribute)": [[38, "maize.core.runtime.Status.STOPPED"]], "status (class in maize.core.runtime)": [[38, "maize.core.runtime.Status"]], "waiting_for_command (maize.core.runtime.status attribute)": [[38, "maize.core.runtime.Status.WAITING_FOR_COMMAND"]], "waiting_for_input (maize.core.runtime.status attribute)": [[38, "maize.core.runtime.Status.WAITING_FOR_INPUT"]], "waiting_for_output (maize.core.runtime.status attribute)": [[38, "maize.core.runtime.Status.WAITING_FOR_OUTPUT"]], "waiting_for_resources (maize.core.runtime.status attribute)": [[38, "maize.core.runtime.Status.WAITING_FOR_RESOURCES"]], "__init__() (maize.core.runtime.status method)": [[38, "maize.core.runtime.Status.__init__"]], "statushandler (class in maize.core.runtime)": [[39, "maize.core.runtime.StatusHandler"]], "__init__() (maize.core.runtime.statushandler method)": [[39, "maize.core.runtime.StatusHandler.__init__"]], "statusupdate (class in maize.core.runtime)": [[40, "maize.core.runtime.StatusUpdate"]], "__init__() (maize.core.runtime.statusupdate method)": [[40, "maize.core.runtime.StatusUpdate.__init__"]], "full_time (maize.core.runtime.statusupdate attribute)": [[40, "maize.core.runtime.StatusUpdate.full_time"]], "n_inbound (maize.core.runtime.statusupdate attribute)": [[40, "maize.core.runtime.StatusUpdate.n_inbound"]], "n_outbound (maize.core.runtime.statusupdate attribute)": [[40, "maize.core.runtime.StatusUpdate.n_outbound"]], "name (maize.core.runtime.statusupdate attribute)": [[40, "maize.core.runtime.StatusUpdate.name"]], "note (maize.core.runtime.statusupdate attribute)": [[40, "maize.core.runtime.StatusUpdate.note"]], "parents (maize.core.runtime.statusupdate attribute)": [[40, "maize.core.runtime.StatusUpdate.parents"]], "run_time (maize.core.runtime.statusupdate attribute)": [[40, "maize.core.runtime.StatusUpdate.run_time"]], "status (maize.core.runtime.statusupdate attribute)": [[40, "maize.core.runtime.StatusUpdate.status"]], "format_summaries() (in module maize.core.runtime)": [[41, "maize.core.runtime.format_summaries"]], "format_update() (in module maize.core.runtime)": [[42, "maize.core.runtime.format_update"]], "init_signal() (in module maize.core.runtime)": [[43, "maize.core.runtime.init_signal"]], "setup_build_logging() (in module maize.core.runtime)": [[44, "maize.core.runtime.setup_build_logging"]], "setup_node_logging() (in module maize.core.runtime)": [[45, "maize.core.runtime.setup_node_logging"]], "maize.core.workflow": [[46, "module-maize.core.workflow"]], "checkpointexception": [[47, "maize.core.workflow.CheckpointException"]], "parsingexception": [[48, "maize.core.workflow.ParsingException"]], "workflow (class in maize.core.workflow)": [[49, "maize.core.workflow.Workflow"]], "__init__() (maize.core.workflow.workflow method)": [[49, "maize.core.workflow.Workflow.__init__"]], "active_nodes (maize.core.workflow.workflow property)": [[49, "maize.core.workflow.Workflow.active_nodes"]], "add() (maize.core.workflow.workflow method)": [[49, "maize.core.workflow.Workflow.add"]], "add_all() (maize.core.workflow.workflow method)": [[49, "maize.core.workflow.Workflow.add_all"]], "add_arguments() (maize.core.workflow.workflow method)": [[49, "maize.core.workflow.Workflow.add_arguments"]], "all_parameters (maize.core.workflow.workflow property)": [[49, "maize.core.workflow.Workflow.all_parameters"]], "as_dict() (maize.core.workflow.workflow method)": [[49, "maize.core.workflow.Workflow.as_dict"]], "auto_connect() (maize.core.workflow.workflow method)": [[49, "maize.core.workflow.Workflow.auto_connect"]], "build() (maize.core.workflow.workflow method)": [[49, "maize.core.workflow.Workflow.build"]], "chain() (maize.core.workflow.workflow method)": [[49, "maize.core.workflow.Workflow.chain"]], "check() (maize.core.workflow.workflow method)": [[49, "maize.core.workflow.Workflow.check"]], "check_dependencies() (maize.core.workflow.workflow method)": [[49, "maize.core.workflow.Workflow.check_dependencies"]], "cleanup() (maize.core.workflow.workflow method)": [[49, "maize.core.workflow.Workflow.cleanup"]], "combine_parameters() (maize.core.workflow.workflow method)": [[49, "maize.core.workflow.Workflow.combine_parameters"]], "component_path (maize.core.workflow.workflow property)": [[49, "maize.core.workflow.Workflow.component_path"]], "connect() (maize.core.workflow.workflow method)": [[49, "maize.core.workflow.Workflow.connect"]], "connect_all() (maize.core.workflow.workflow method)": [[49, "maize.core.workflow.Workflow.connect_all"]], "datatype (maize.core.workflow.workflow attribute)": [[49, "maize.core.workflow.Workflow.datatype"]], "execute() (maize.core.workflow.workflow method)": [[49, "maize.core.workflow.Workflow.execute"]], "flat_channels (maize.core.workflow.workflow property)": [[49, "maize.core.workflow.Workflow.flat_channels"]], "flat_components (maize.core.workflow.workflow property)": [[49, "maize.core.workflow.Workflow.flat_components"]], "flat_nodes (maize.core.workflow.workflow property)": [[49, "maize.core.workflow.Workflow.flat_nodes"]], "from_checkpoint() (maize.core.workflow.workflow class method)": [[49, "maize.core.workflow.Workflow.from_checkpoint"]], "from_dict() (maize.core.workflow.workflow class method)": [[49, "maize.core.workflow.Workflow.from_dict"]], "from_file() (maize.core.workflow.workflow class method)": [[49, "maize.core.workflow.Workflow.from_file"]], "from_name() (maize.core.workflow.workflow class method)": [[49, "maize.core.workflow.Workflow.from_name"]], "full_timer (maize.core.workflow.workflow attribute)": [[49, "maize.core.workflow.Workflow.full_timer"]], "generate_config_template() (maize.core.workflow.workflow method)": [[49, "maize.core.workflow.Workflow.generate_config_template"]], "get_available_nodes() (maize.core.workflow.workflow static method)": [[49, "maize.core.workflow.Workflow.get_available_nodes"]], "get_available_workflows() (maize.core.workflow.workflow static method)": [[49, "maize.core.workflow.Workflow.get_available_workflows"]], "get_inputs() (maize.core.workflow.workflow class method)": [[49, "maize.core.workflow.Workflow.get_inputs"]], "get_interfaces() (maize.core.workflow.workflow class method)": [[49, "maize.core.workflow.Workflow.get_interfaces"]], "get_node() (maize.core.workflow.workflow method)": [[49, "maize.core.workflow.Workflow.get_node"]], "get_node_class() (maize.core.workflow.workflow static method)": [[49, "maize.core.workflow.Workflow.get_node_class"]], "get_outputs() (maize.core.workflow.workflow class method)": [[49, "maize.core.workflow.Workflow.get_outputs"]], "get_parameter() (maize.core.workflow.workflow method)": [[49, "maize.core.workflow.Workflow.get_parameter"]], "get_parameters() (maize.core.workflow.workflow class method)": [[49, "maize.core.workflow.Workflow.get_parameters"]], "get_port() (maize.core.workflow.workflow method)": [[49, "maize.core.workflow.Workflow.get_port"]], "get_summary_line() (maize.core.workflow.workflow class method)": [[49, "maize.core.workflow.Workflow.get_summary_line"]], "get_workflow_summary() (maize.core.workflow.workflow static method)": [[49, "maize.core.workflow.Workflow.get_workflow_summary"]], "load_checkpoint() (maize.core.workflow.workflow method)": [[49, "maize.core.workflow.Workflow.load_checkpoint"]], "logger (maize.core.workflow.workflow attribute)": [[49, "maize.core.workflow.Workflow.logger"]], "map() (maize.core.workflow.workflow method)": [[49, "maize.core.workflow.Workflow.map"]], "map_port() (maize.core.workflow.workflow method)": [[49, "maize.core.workflow.Workflow.map_port"]], "n_inbound (maize.core.workflow.workflow property)": [[49, "maize.core.workflow.Workflow.n_inbound"]], "n_outbound (maize.core.workflow.workflow property)": [[49, "maize.core.workflow.Workflow.n_outbound"]], "node_config (maize.core.workflow.workflow property)": [[49, "maize.core.workflow.Workflow.node_config"]], "parents (maize.core.workflow.workflow property)": [[49, "maize.core.workflow.Workflow.parents"]], "ports (maize.core.workflow.workflow property)": [[49, "maize.core.workflow.Workflow.ports"]], "ports_active() (maize.core.workflow.workflow method)": [[49, "maize.core.workflow.Workflow.ports_active"]], "register() (maize.core.workflow.workflow class method)": [[49, "maize.core.workflow.Workflow.register"]], "required_callables (maize.core.workflow.workflow attribute)": [[49, "maize.core.workflow.Workflow.required_callables"]], "required_packages (maize.core.workflow.workflow attribute)": [[49, "maize.core.workflow.Workflow.required_packages"]], "root (maize.core.workflow.workflow property)": [[49, "maize.core.workflow.Workflow.root"]], "run_timer (maize.core.workflow.workflow attribute)": [[49, "maize.core.workflow.Workflow.run_timer"]], "send_update() (maize.core.workflow.workflow method)": [[49, "maize.core.workflow.Workflow.send_update"]], "serialized_summary() (maize.core.workflow.workflow class method)": [[49, "maize.core.workflow.Workflow.serialized_summary"]], "set_global_attribute() (maize.core.workflow.workflow method)": [[49, "maize.core.workflow.Workflow.set_global_attribute"]], "setup_directories() (maize.core.workflow.workflow method)": [[49, "maize.core.workflow.Workflow.setup_directories"]], "status (maize.core.workflow.workflow attribute)": [[49, "maize.core.workflow.Workflow.status"]], "to_checkpoint() (maize.core.workflow.workflow method)": [[49, "maize.core.workflow.Workflow.to_checkpoint"]], "to_dict() (maize.core.workflow.workflow method)": [[49, "maize.core.workflow.Workflow.to_dict"]], "to_file() (maize.core.workflow.workflow method)": [[49, "maize.core.workflow.Workflow.to_file"]], "update_parameters() (maize.core.workflow.workflow method)": [[49, "maize.core.workflow.Workflow.update_parameters"]], "update_settings_with_args() (maize.core.workflow.workflow method)": [[49, "maize.core.workflow.Workflow.update_settings_with_args"]], "update_with_args() (maize.core.workflow.workflow method)": [[49, "maize.core.workflow.Workflow.update_with_args"]], "visualize() (maize.core.workflow.workflow method)": [[49, "maize.core.workflow.Workflow.visualize"]], "work_dir (maize.core.workflow.workflow attribute)": [[49, "maize.core.workflow.Workflow.work_dir"]], "expose() (in module maize.core.workflow)": [[50, "maize.core.workflow.expose"]], "maize.utilities": [[51, "module-maize.utilities"]], "maize.utilities.execution": [[52, "module-maize.utilities.execution"]], "commandrunner (in module maize.utilities.execution)": [[53, "maize.utilities.execution.CommandRunner"]], "commandrunnerpsij (class in maize.utilities.execution)": [[54, "maize.utilities.execution.CommandRunnerPSIJ"]], "__init__() (maize.utilities.execution.commandrunnerpsij method)": [[54, "maize.utilities.execution.CommandRunnerPSIJ.__init__"]], "run() (maize.utilities.execution.commandrunnerpsij method)": [[54, "maize.utilities.execution.CommandRunnerPSIJ.run"]], "run_only() (maize.utilities.execution.commandrunnerpsij method)": [[54, "maize.utilities.execution.CommandRunnerPSIJ.run_only"]], "run_parallel() (maize.utilities.execution.commandrunnerpsij method)": [[54, "maize.utilities.execution.CommandRunnerPSIJ.run_parallel"]], "run_validate() (maize.utilities.execution.commandrunnerpsij method)": [[54, "maize.utilities.execution.CommandRunnerPSIJ.run_validate"]], "validate() (maize.utilities.execution.commandrunnerpsij method)": [[54, "maize.utilities.execution.CommandRunnerPSIJ.validate"]], "jobresourceconfig (class in maize.utilities.execution)": [[55, "maize.utilities.execution.JobResourceConfig"]], "__init__() (maize.utilities.execution.jobresourceconfig method)": [[55, "maize.utilities.execution.JobResourceConfig.__init__"]], "processerror": [[56, "maize.utilities.execution.ProcessError"]], "resourcemanagerconfig (class in maize.utilities.execution)": [[57, "maize.utilities.execution.ResourceManagerConfig"]], "__init__() (maize.utilities.execution.resourcemanagerconfig method)": [[57, "maize.utilities.execution.ResourceManagerConfig.__init__"]], "check_executable() (in module maize.utilities.execution)": [[58, "maize.utilities.execution.check_executable"]], "check_returncode() (in module maize.utilities.execution)": [[59, "maize.utilities.execution.check_returncode"]], "run_single_process() (in module maize.utilities.execution)": [[60, "maize.utilities.execution.run_single_process"]], "maize.utilities.io": [[61, "module-maize.utilities.io"]], "config (class in maize.utilities.io)": [[62, "maize.utilities.io.Config"]], "__init__() (maize.utilities.io.config method)": [[62, "maize.utilities.io.Config.__init__"]], "from_default() (maize.utilities.io.config class method)": [[62, "maize.utilities.io.Config.from_default"]], "update() (maize.utilities.io.config method)": [[62, "maize.utilities.io.Config.update"]], "nodeconfig (class in maize.utilities.io)": [[63, "maize.utilities.io.NodeConfig"]], "__init__() (maize.utilities.io.nodeconfig method)": [[63, "maize.utilities.io.NodeConfig.__init__"]], "from_dict() (maize.utilities.io.nodeconfig class method)": [[63, "maize.utilities.io.NodeConfig.from_dict"]], "generate_template() (maize.utilities.io.nodeconfig method)": [[63, "maize.utilities.io.NodeConfig.generate_template"]], "generate_template_toml() (maize.utilities.io.nodeconfig method)": [[63, "maize.utilities.io.NodeConfig.generate_template_toml"]], "nodeconfigdict (class in maize.utilities.io)": [[64, "maize.utilities.io.NodeConfigDict"]], "__init__() (maize.utilities.io.nodeconfigdict method)": [[64, "maize.utilities.io.NodeConfigDict.__init__"]], "clear() (maize.utilities.io.nodeconfigdict method)": [[64, "maize.utilities.io.NodeConfigDict.clear"]], "copy() (maize.utilities.io.nodeconfigdict method)": [[64, "maize.utilities.io.NodeConfigDict.copy"]], "fromkeys() (maize.utilities.io.nodeconfigdict method)": [[64, "maize.utilities.io.NodeConfigDict.fromkeys"]], "get() (maize.utilities.io.nodeconfigdict method)": [[64, "maize.utilities.io.NodeConfigDict.get"]], "items() (maize.utilities.io.nodeconfigdict method)": [[64, "maize.utilities.io.NodeConfigDict.items"]], "keys() (maize.utilities.io.nodeconfigdict method)": [[64, "maize.utilities.io.NodeConfigDict.keys"]], "pop() (maize.utilities.io.nodeconfigdict method)": [[64, "maize.utilities.io.NodeConfigDict.pop"]], "popitem() (maize.utilities.io.nodeconfigdict method)": [[64, "maize.utilities.io.NodeConfigDict.popitem"]], "setdefault() (maize.utilities.io.nodeconfigdict method)": [[64, "maize.utilities.io.NodeConfigDict.setdefault"]], "update() (maize.utilities.io.nodeconfigdict method)": [[64, "maize.utilities.io.NodeConfigDict.update"]], "values() (maize.utilities.io.nodeconfigdict method)": [[64, "maize.utilities.io.NodeConfigDict.values"]], "common_parent() (in module maize.utilities.io)": [[65, "maize.utilities.io.common_parent"]], "create_default_parser() (in module maize.utilities.io)": [[66, "maize.utilities.io.create_default_parser"]], "expand_shell_vars() (in module maize.utilities.io)": [[67, "maize.utilities.io.expand_shell_vars"]], "get_plugins() (in module maize.utilities.io)": [[68, "maize.utilities.io.get_plugins"]], "load_file() (in module maize.utilities.io)": [[69, "maize.utilities.io.load_file"]], "parse_groups() (in module maize.utilities.io)": [[70, "maize.utilities.io.parse_groups"]], "read_input() (in module maize.utilities.io)": [[71, "maize.utilities.io.read_input"]], "remove_dir_contents() (in module maize.utilities.io)": [[72, "maize.utilities.io.remove_dir_contents"]], "sendtree() (in module maize.utilities.io)": [[73, "maize.utilities.io.sendtree"]], "setup_workflow() (in module maize.utilities.io)": [[74, "maize.utilities.io.setup_workflow"]], "with_fields() (in module maize.utilities.io)": [[75, "maize.utilities.io.with_fields"]], "with_keys() (in module maize.utilities.io)": [[76, "maize.utilities.io.with_keys"]], "write_input() (in module maize.utilities.io)": [[77, "maize.utilities.io.write_input"]], "maize.utilities.macros": [[78, "module-maize.utilities.macros"]], "function_to_node() (in module maize.utilities.macros)": [[79, "maize.utilities.macros.function_to_node"]], "lambda_node() (in module maize.utilities.macros)": [[80, "maize.utilities.macros.lambda_node"]], "node_to_function() (in module maize.utilities.macros)": [[81, "maize.utilities.macros.node_to_function"]], "parallel() (in module maize.utilities.macros)": [[82, "maize.utilities.macros.parallel"]], "maize.utilities.resources": [[83, "module-maize.utilities.resources"]], "chunkedsemaphore (class in maize.utilities.resources)": [[84, "maize.utilities.resources.ChunkedSemaphore"]], "__init__() (maize.utilities.resources.chunkedsemaphore method)": [[84, "maize.utilities.resources.ChunkedSemaphore.__init__"]], "acquire() (maize.utilities.resources.chunkedsemaphore method)": [[84, "maize.utilities.resources.ChunkedSemaphore.acquire"]], "release() (maize.utilities.resources.chunkedsemaphore method)": [[84, "maize.utilities.resources.ChunkedSemaphore.release"]], "resources (class in maize.utilities.resources)": [[85, "maize.utilities.resources.Resources"]], "__init__() (maize.utilities.resources.resources method)": [[85, "maize.utilities.resources.Resources.__init__"]], "cpu_count() (in module maize.utilities.resources)": [[86, "maize.utilities.resources.cpu_count"]], "gpu_count() (in module maize.utilities.resources)": [[87, "maize.utilities.resources.gpu_count"]], "maize.utilities.testing": [[88, "module-maize.utilities.testing"]], "mockchannel (class in maize.utilities.testing)": [[89, "maize.utilities.testing.MockChannel"]], "__init__() (maize.utilities.testing.mockchannel method)": [[89, "maize.utilities.testing.MockChannel.__init__"]], "active (maize.utilities.testing.mockchannel property)": [[89, "maize.utilities.testing.MockChannel.active"]], "close() (maize.utilities.testing.mockchannel method)": [[89, "maize.utilities.testing.MockChannel.close"]], "flush() (maize.utilities.testing.mockchannel method)": [[89, "maize.utilities.testing.MockChannel.flush"]], "get() (maize.utilities.testing.mockchannel method)": [[89, "maize.utilities.testing.MockChannel.get"]], "kill() (maize.utilities.testing.mockchannel method)": [[89, "maize.utilities.testing.MockChannel.kill"]], "ready (maize.utilities.testing.mockchannel property)": [[89, "maize.utilities.testing.MockChannel.ready"]], "receive() (maize.utilities.testing.mockchannel method)": [[89, "maize.utilities.testing.MockChannel.receive"]], "send() (maize.utilities.testing.mockchannel method)": [[89, "maize.utilities.testing.MockChannel.send"]], "size (maize.utilities.testing.mockchannel property)": [[89, "maize.utilities.testing.MockChannel.size"]], "testrig (class in maize.utilities.testing)": [[90, "maize.utilities.testing.TestRig"]], "__init__() (maize.utilities.testing.testrig method)": [[90, "maize.utilities.testing.TestRig.__init__"]], "inputs (maize.utilities.testing.testrig attribute)": [[90, "maize.utilities.testing.TestRig.inputs"]], "node (maize.utilities.testing.testrig attribute)": [[90, "maize.utilities.testing.TestRig.node"]], "parameters (maize.utilities.testing.testrig attribute)": [[90, "maize.utilities.testing.TestRig.parameters"]], "run() (maize.utilities.testing.testrig method)": [[90, "maize.utilities.testing.TestRig.run"]], "set_inputs() (maize.utilities.testing.testrig method)": [[90, "maize.utilities.testing.TestRig.set_inputs"]], "set_parameters() (maize.utilities.testing.testrig method)": [[90, "maize.utilities.testing.TestRig.set_parameters"]], "setup() (maize.utilities.testing.testrig method)": [[90, "maize.utilities.testing.TestRig.setup"]], "setup_run() (maize.utilities.testing.testrig method)": [[90, "maize.utilities.testing.TestRig.setup_run"]], "pep 258": [[91, "index-1"], [96, "index-0"]], "python enhancement proposals": [[91, "index-1"], [96, "index-0"], [124, "index-0"], [124, "index-1"]], "maize.utilities.utilities": [[91, "module-maize.utilities.utilities"]], "strenum (class in maize.utilities.utilities)": [[92, "maize.utilities.utilities.StrEnum"]], "__init__() (maize.utilities.utilities.strenum method)": [[92, "maize.utilities.utilities.StrEnum.__init__"]], "timer (class in maize.utilities.utilities)": [[93, "maize.utilities.utilities.Timer"]], "__init__() (maize.utilities.utilities.timer method)": [[93, "maize.utilities.utilities.Timer.__init__"]], "elapsed_time (maize.utilities.utilities.timer property)": [[93, "maize.utilities.utilities.Timer.elapsed_time"]], "pause() (maize.utilities.utilities.timer method)": [[93, "maize.utilities.utilities.Timer.pause"]], "running (maize.utilities.utilities.timer property)": [[93, "maize.utilities.utilities.Timer.running"]], "start() (maize.utilities.utilities.timer method)": [[93, "maize.utilities.utilities.Timer.start"]], "stop() (maize.utilities.utilities.timer method)": [[93, "maize.utilities.utilities.Timer.stop"]], "change_environment() (in module maize.utilities.utilities)": [[94, "maize.utilities.utilities.change_environment"]], "chunks() (in module maize.utilities.utilities)": [[95, "maize.utilities.utilities.chunks"]], "extract_attribute_docs() (in module maize.utilities.utilities)": [[96, "maize.utilities.utilities.extract_attribute_docs"]], "extract_parent_type() (in module maize.utilities.utilities)": [[97, "maize.utilities.utilities.extract_parent_type"]], "extract_type() (in module maize.utilities.utilities)": [[98, "maize.utilities.utilities.extract_type"]], "find_probable_files_from_command() (in module maize.utilities.utilities)": [[99, "maize.utilities.utilities.find_probable_files_from_command"]], "graph_cycles() (in module maize.utilities.utilities)": [[100, "maize.utilities.utilities.graph_cycles"]], "graph_to_nx() (in module maize.utilities.utilities)": [[101, "maize.utilities.utilities.graph_to_nx"]], "has_file() (in module maize.utilities.utilities)": [[102, "maize.utilities.utilities.has_file"]], "has_module_system() (in module maize.utilities.utilities)": [[103, "maize.utilities.utilities.has_module_system"]], "is_path_type() (in module maize.utilities.utilities)": [[104, "maize.utilities.utilities.is_path_type"]], "load_modules() (in module maize.utilities.utilities)": [[105, "maize.utilities.utilities.load_modules"]], "make_list() (in module maize.utilities.utilities)": [[106, "maize.utilities.utilities.make_list"]], "match_context() (in module maize.utilities.utilities)": [[107, "maize.utilities.utilities.match_context"]], "matching_types() (in module maize.utilities.utilities)": [[108, "maize.utilities.utilities.matching_types"]], "nested_dict_to_tuple() (in module maize.utilities.utilities)": [[109, "maize.utilities.utilities.nested_dict_to_tuple"]], "set_environment() (in module maize.utilities.utilities)": [[110, "maize.utilities.utilities.set_environment"]], "tuple_to_nested_dict() (in module maize.utilities.utilities)": [[111, "maize.utilities.utilities.tuple_to_nested_dict"]], "typecheck() (in module maize.utilities.utilities)": [[112, "maize.utilities.utilities.typecheck"]], "unique_id() (in module maize.utilities.utilities)": [[113, "maize.utilities.utilities.unique_id"]], "maize.utilities.validation": [[114, "module-maize.utilities.validation"]], "failvalidator (class in maize.utilities.validation)": [[115, "maize.utilities.validation.FailValidator"]], "__init__() (maize.utilities.validation.failvalidator method)": [[115, "maize.utilities.validation.FailValidator.__init__"]], "filevalidator (class in maize.utilities.validation)": [[116, "maize.utilities.validation.FileValidator"]], "__init__() (maize.utilities.validation.filevalidator method)": [[116, "maize.utilities.validation.FileValidator.__init__"]], "outputvalidator (class in maize.utilities.validation)": [[117, "maize.utilities.validation.OutputValidator"]], "__init__() (maize.utilities.validation.outputvalidator method)": [[117, "maize.utilities.validation.OutputValidator.__init__"]], "successvalidator (class in maize.utilities.validation)": [[118, "maize.utilities.validation.SuccessValidator"]], "__init__() (maize.utilities.validation.successvalidator method)": [[118, "maize.utilities.validation.SuccessValidator.__init__"]], "validator (class in maize.utilities.validation)": [[119, "maize.utilities.validation.Validator"]], "__init__() (maize.utilities.validation.validator method)": [[119, "maize.utilities.validation.Validator.__init__"]], "maize.utilities.visual": [[120, "module-maize.utilities.visual"]], "nested_graphviz() (in module maize.utilities.visual)": [[121, "maize.utilities.visual.nested_graphviz"]], "pep 646": [[124, "index-1"]], "pep 8": [[124, "index-0"]], "channel": [[126, "term-channel"]], "component": [[126, "term-component"]], "graph": [[126, "term-graph"]], "input": [[126, "term-input"]], "interface": [[126, "term-interface"]], "node": [[126, "term-node"]], "output": [[126, "term-output"]], "parameter": [[126, "term-parameter"]], "port": [[126, "term-port"]], "subgraph": [[126, "term-subgraph"]], "workflow": [[126, "term-workflow"]]}})